/** @mainpage ????
*
*@section ??????
*-# ?????????????
*-# ???????????????????????????????????????????C/C++??????????????????????????????
*-# ?????????????????????????б????????????????????????????????????????????????map?У???????????????????
*
*@section ????????
*-# ??@link #DVP_INFORMATION ?????@endlink????????????????б??API????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink????磬?????????????ò????????е???????????????????????????
*-# ????<a href="C:/Program Files (x86)/Do3think/BasedCam2">Basedcam2</a>???????????????????????????????????????API???????????????
*-# ???????API??????????@link #DVP2_API_BASE ????????@endlink????????????????????????????????
*-# ?ο?@link #CaptureImage CaptureImage@endlink????????????????????
*-# ????????@link #dvpHandle dvpHandle@endlink ??????????
*-# ?????????????????ο?chm???????????????????
*
*@section ??????
* http://www.do3think.com
*
*@section ???API
* @version Version 2.25.43.1332(build: Mar  6 2023 16:48:32)
*
*
*@section ??????????
*@subsection Ver1 2016-4-1(2.5.12)
*-# ??????????汾
*@subsection Ver2 2016-10-31(2.7.8)
*-# ????@link #dvpGetCurveLut ????LUT@endlink????
*-# ????@link #dvpColorCorrection ???У??????@endlink???д????
*-# ????@link #dvpCaptureFile ??????????????ROI?????????????@endlink?????
*-# ????@link #dvpGetRotateOpposite ??????/??90?????@endlink?????
*-# ?????@link #dvpFrame ????????@endlink???????????????????
*@subsection Ver3 2016-11-29(2.8.9)
*-# ????@link #dvpSetAeConfig ??????????@endlink????
*-# ????@link #dvpEventCallback ????????????@endlink????
*-# ????@link #dvpGetFrameBuffer ?????????????????????@endlink?????
*@subsection Ver4 2017-02-08(2.9.13)
*-# ????@link #dvpResetDevice ??λ?豸@endlink?????
*@subsection Ver5 2017-03-22(2.10.16)
*-# ????@link #dvpSetAutoDefectFixState ?????????????@endlink?????
*@subsection Ver6 2017-05-12(2.11.18)
*-# ????@link #dvpHold ?ж?????????????@endlink?????
*-# ????@link #dvpSetHardwareIspState ??????ISP???@endlink?????
*@subsection Ver7 2017-06-16(2.12.19)
*-# ????@link #dvpGetFunctionInfo ?????????????????@endlink????
*-# ????@link #dvpImageFormat::FORMAT_RGB32 RGB32?????@endlink????????
*@subsection Ver8 2017-06-30(2.13.20)
*-# ????@link #dvpSetConfigString ????????????????@endlink????
*@subsection Ver9 2017-07-17(2.14.21)
*-# ??????@link #dvpStreamFormat ?????????@endlink?????
*@subsection Ver 2017-09-15(2.15.24)
*-# ?????????@link #dvpCameraInfo::UserID ???????@endlink??@link #dvpOpenByUserId ?????@endlink?????
*-# ?????????@link #dvpLoadUserSet ???????@endlink?????
*@subsection Ver10 2018-04-11(2.16.32)
*-# ????????????????@link #dvpProcessImage ???????@endlink?????
*@subsection Ver11 2018-08-3(2.17.33)
*-# ?????????@link #dvpLine ???????@endlink?????????????????????dvpInputIo??dvpOutputIo??е???
*-# ??????@link #dvpSetTriggerSource ????????@endlink????
*@subsection Ver12 2019-03-12(2.18.35)
*-# ??????@link #dvpSetBufferQueueSize ????????????@endlink????
*@subsection Ver13 2019-08-6(2.19.37)
*-# ??????@link #dvpSetBufferConfig ????????????@endlink????
*@subsection Ver14 2019-09-3(2.20.38)
*-# ??????@link #dvpDebugReport ?????????????@endlink????
*@subsection Ver15 2021-11-15(2.21.42)
*-# ??????@link #dvpSetLineRate ?????????????????@endlink????
*-# ??????@link #dvpSetLineTriggerConfig ??????????????????@endlink????
*@subsection Ver16 2022-2-18(2.22.43)
*-# ??????@link #dvpPrintPictureToBuffer ??????????????????湦??@endlink????
*@subsection Ver17 2022-7-20(2.22.44)
*-# ?????????????????????????????????????????????????????
*@subsection Ver18 2022-8-12(2.22.44)
*-# ??????@link #?????????????????????????@endlink????
*@subsection Ver19 2022-8-24(2.23.45)
*-# ??????@link #dvpGetXml ???xml???@endlink????
*@subsection Ver20 2022-8-26(2.23.48)
*-# ??????@link ????????????????????????@endlink??汾
*@subsection Ver21 2022-9-7(2.23.49)
*-# ???@link B2?????????????????????????????????????????@endlink??汾
*@subsection Ver22 2022-9-8(2.24.50)
*-# ???@link ?????????????????????????????????????????????@endlink??汾
*@subsection Ver23 2022-9-14(2.24.51)
*-# ???@link ?????????????TriggerMode??PayloadSize@endlink??汾
*@subsection Ver24 2022-9-15(2.24.52)
*-# ???@link ?????????????AcquisitionFrameRate??AcquisitionFrameRateEnable@endlink??汾
*@subsection Ver25 2023-3-6(2.25.43)
*-# ???@link ????dvpWriteGenICamRegдgeni?????????dvpReadGenICamReg??geni????????
*-# ???@link ????dvpGetConfigString???Config????????
*/
#ifndef __DVPCAMERA_H__
#define __DVPCAMERA_H__

#define dvpPtr(ptr) ptr*

#ifndef __cplusplus
#define bool unsigned char
#define false (0)
#define true  (1)
#endif

#ifndef _WIN32
#ifndef __cplusplus
#define dvp2api extern
#else
#define dvp2api extern "C"
#endif
#else
#include <windows.h>
#ifndef __cplusplus
#define dvp2api extern     __declspec(dllimport)
#else
#define dvp2api extern "C" __declspec(dllimport)
#endif
#endif

dvp2api const unsigned int dvpVersion[4];
/** @brief ?????
*@see dvpGetFrame*/
typedef enum dvpImageFormat
{
    /** @brief ?????? */
    FORMAT_MONO = 0,

    /** @brief BGGR??? */
    FORMAT_BAYER_BG = 1,

    /** @brief GBRG??? */
    FORMAT_BAYER_GB = 2,

    /** @brief GRBG??? */
    FORMAT_BAYER_GR = 3,

    /** @brief RGGB??? */
    FORMAT_BAYER_RG = 4,

    /** @brief BGR?????24??????? */
    FORMAT_BGR24 = 10,

    /** @brief BGRA?????32??????? */
    FORMAT_BGR32 = 11,

    /** @brief BGR?????48??????? */
    FORMAT_BGR48 = 12,

    /** @brief BGRA?????64??????? */
    FORMAT_BGR64 = 13,

    /** @brief RGB?????24??????? */
    FORMAT_RGB24 = 14,

    /** @brief RGBA?????32??????? */
    FORMAT_RGB32 = 15,

    /** @brief RGB?????48??????? */
    FORMAT_RGB48 = 16,

    /** @brief YUV411 */
    FORMAT_YUV411 = 20,

    /** @brief YUV422 */
    FORMAT_YUV422 = 21,

    /** @brief YUV444 */
    FORMAT_YUV444 = 22,

    /** @brief YUV420 */
    FORMAT_YUV420 = 23,

    /** @brief BGR?????8?????????? */
    FORMAT_B8_G8_R8 = 40,

    /** @brief BGR?????16?????????? */
    FORMAT_B16_G16_R16 = 44,

} dvpImageFormat;


/** @brief ?????????
*@see dvpSetSourceFormat
*@see dvpSetTargetFormat
*@warning ????????и???????
*@note??????????????? #dvpSetSourceFormatSel ?? #dvpSetTargetFormatSel ??н??*/
typedef enum dvpStreamFormat
{
    /** @brief 8λ??? */
    S_RAW8 = 0,

    /** @brief 10λ??? */
    S_RAW10 = 1,

    /** @brief 12λ??? */
    S_RAW12 = 2,

    /** @brief 14λ??? */
    S_RAW14 = 3,

    /** @brief 16λ??? */
    S_RAW16 = 4,

    /** @brief BGR?????24??????? */
    S_BGR24 = 10,

    /** @brief BGRA?????32??????? */
    S_BGR32 = 11,

    /** @brief BGRA?????48??????? */
    S_BGR48 = 12,

    /** @brief BGRA?????64??????? */
    S_BGR64 = 13,

    /** @brief RGB?????24??????? */
    S_RGB24 = 14,

    /** @brief RGBA?????32??????? */
    S_RGB32 = 15,

    /** @brief RGBA?????48??????? */
    S_RGB48 = 16,

    /** @brief RGBA?????64??????? */
    S_RGB64 = 17,

    /** @brief YUV411 */
    S_YUV411 = 20,

    /** @brief YUV422 */
    S_YUV422 = 21,

    /** @brief YUV444 */
    S_YUV444 = 22,

    /** @brief YUV444 */
    S_YUV420 = 23,

    /** @brief 8λ?????? */
    S_MONO8 = 30,

    /** @brief 10λ?????? */
    S_MONO10 = 31,

    /** @brief 12λ?????? */
    S_MONO12 = 32,

    /** @brief 14λ?????? */
    S_MONO14 = 33,

    /** @brief 16λ?????? */
    S_MONO16 = 34,

    /** @brief BGR?????8?????????? */
    S_B8_G8_R8 = 40,

    /** @brief BGR?????16?????????? */
    S_B16_G16_R16 = 44,

} dvpStreamFormat;


/** @brief ???λ??
*@see dvpGetFrame*/
typedef enum dvpBits
{
    /** @brief 8???????? */
    BITS_8 = 0,

    /** @brief 10???????? */
    BITS_10 = 1,

    /** @brief 12???????? */
    BITS_12 = 2,

    /** @brief 14???????? */
    BITS_14 = 3,

    /** @brief 16???????? */
    BITS_16 = 4,

} dvpBits;


/** @brief ????????*/
typedef enum dvpAeMode
{
    /** @brief ???????????????????????????? */
    AE_MODE_AE_AG = 0,

    /** @brief ????????????????????????????? */
    AE_MODE_AG_AE = 1,

    /** @brief ?????? */
    AE_MODE_AE_ONLY = 2,

    /** @brief ??????? */
    AE_MODE_AG_ONLY = 3,

} dvpAeMode;


/** @brief ?????????*/
typedef enum dvpAeOperation
{
    /** @brief ?????? */
    AE_OP_OFF = 0,

    /** @brief ??????? */
    AE_OP_ONCE = 1,

    /** @brief ???????? */
    AE_OP_CONTINUOUS = 2,

} dvpAeOperation;


/** @brief ???????????*/
typedef enum dvpAwbOperation
{
    /** @brief ?????? */
    AWB_OP_OFF = 0,

    /** @brief ??????? */
    AWB_OP_ONCE = 1,

    /** @brief ???????? */
    AWB_OP_CONTINUOUS = 2,

} dvpAwbOperation;


/** @brief ??????*/
typedef enum dvpAntiFlick
{
    /** @brief ?????????? */
    ANTIFLICK_DISABLE = 0,

    /** @brief ????50hz??? */
    ANTIFLICK_50HZ = 1,

    /** @brief ????60hz??? */
    ANTIFLICK_60HZ = 2,

} dvpAntiFlick;


/** @brief ??????????*/
typedef enum dvpSensorType
{
    /** @brief CMOS?????? */
    SENSOR_TYPE_CMOS = 0,

    /** @brief CCD?????? */
    SENSOR_TYPE_CCD = 1,

} dvpSensorType;


/** @brief ??????????????*/
typedef enum dvpSensorPixel
{
    /** @brief ??????? */
    SENSOR_PIXEL_MONO = 0,

    /** @brief RGGB??????? */
    SENSOR_PIXEL_BAYER_RG = 1,

    /** @brief GBRG??????? */
    SENSOR_PIXEL_BAYER_GB = 2,

    /** @brief GRBG??????? */
    SENSOR_PIXEL_BAYER_GR = 3,

    /** @brief BGGR??????? */
    SENSOR_PIXEL_BAYER_BG = 4,

} dvpSensorPixel;


/** @brief ???????????*/
typedef enum dvpStreamEvent
{
    /** @brief ?????? */
    STREAM_EVENT_ARRIVED = 0,

    /** @brief ???У???? */
    STREAM_EVENT_CORRECTED = 1,

    /** @brief ?????? */
    STREAM_EVENT_PROCESSED = 2,

    /** @brief ????????????????@link #dvpGetFrame dvpGetFrame@endlink ????????????????????????????? 
*@warning ????@link #dvpStart ?????????@endlink?????ú?
*@see dvpProcessImage */
    STREAM_EVENT_FRAME_THREAD = 3,

} dvpStreamEvent;


/** @brief ??????*/
typedef enum dvpEvent
{
    /** @brief δ??? */
    EVENT_UNKNOW = 0,

    /** @brief ?????? */
    EVENT_CONNECTED = 1,

    /** @brief ??????? */
    EVENT_DISCONNECTED = 2,

    /** @brief ????????????? */
    EVENT_STREAM_STARTRD = 3,

    /** @brief ??????????? */
    EVENT_STREAM_STOPPED = 4,

    /** @brief ???(?????) */
    EVENT_FRAME_LOST = 5,

    /** @brief ??????? */
    EVENT_FRAME_TIMEOUT = 6,

    /** @brief ?????? */
    EVENT_LOST_CONNECTION = 7,

    /** @brief ???????? */
    EVENT_RECONNECTED = 8,

    /** @brief ???????? */
    EVENT_FRAME_START = 9,

    /** @brief ????????? */
    EVENT_FRAME_END = 10,

} dvpEvent;


/** @brief ???????????????*/
typedef enum dvpTriggerInputType
{
    /** @brief ?????????? */
    TRIGGER_IN_OFF = 0,

    /** @brief ???????? */
    TRIGGER_NEG_EDGE = 1,

    /** @brief ???????? */
    TRIGGER_LOW_LEVEL = 2,

    /** @brief ????????? */
    TRIGGER_POS_EDGE = 3,

    /** @brief ???????? */
    TRIGGER_HIGH_LEVEL = 4,

} dvpTriggerInputType;


/** @brief Strobe??????????*/
typedef enum dvpStrobeOutputType
{
    /** @brief Strobe?????? */
    STROBE_OUT_OFF = 0,

    /** @brief ??????? */
    STROBE_OUT_LOW = 1,

    /** @brief ??????? */
    STROBE_OUT_HIGH = 2,

} dvpStrobeOutputType;


/** @brief Strobe??????????*/
typedef enum dvpStrobeDriver
{
    /** @brief ????????????Ч */
    FRAME_DURATION = 0,

    /** @brief ?????????? */
    TIMER_LOGIC = 1,

    /** @brief ????SENSOR??Strobe??? */
    SENSOR_STROBE = 2,

    /** @brief ??????????????Ч?????????????????????????CHECK???? */
    TRIG_DURATION = 4,

    /** @brief TriggerStartActive???????????????? */
    TRIG_START = 5,

    /** @brief TriggerEndActive???????????????? */
    TRIG_END = 6,

    /** @brief ????SENSOR??STROBE????????FPGA???????????????exp_ctrl */
    EXPOSURE_DURATION = 8,

    /** @brief ???? */
    EXPOSURE_START = 9,

    /** @brief ?????? */
    EXPOSURE_END = 10,

    /** @brief ???? */
    FRAME_START = 13,

    /** @brief ????? */
    FRAME_END = 14,

    /** @brief ???? ?????????????? */
    BURST_FRAME_DURATION = 16,

    /** @brief ????????????????? */
    BURST_FRAME_START = 17,

    /** @brief ?????????????????? */
    BURST_FRAME_END = 18,

} dvpStrobeDriver;


/** @brief ?????
*@deprecated*/
typedef enum dvpOutputIoFunction
{
    /** @brief ?????? */
    OUTPUT_FUNCTION_NORMAL = 0x0000,

    /** @brief ???????? */
    OUTPUT_FUNCTION_STROBE = 0x0001,

} dvpOutputIoFunction;


/** @brief ??????
*@deprecated*/
typedef enum dvpInputIoFunction
{
    /** @brief ??????? */
    INPUT_FUNCTION_NORMAL = 0x8001,

    /** @brief ???????? */
    INPUT_FUNCTION_TRIGGER = 0x8002,

} dvpInputIoFunction;


/** @brief ???IO
*@deprecated*/
typedef enum dvpOutputIo
{
    /** @brief ???1 */
    OUTPUT_IO_1 = 0x0001,

    /** @brief ???2 */
    OUTPUT_IO_2 = 0x0002,

    /** @brief ???3 */
    OUTPUT_IO_3 = 0x0003,

    /** @brief ???4 */
    OUTPUT_IO_4 = 0x0004,

    /** @brief ???5 */
    OUTPUT_IO_5 = 0x0005,

    /** @brief ???6 */
    OUTPUT_IO_6 = 0x0006,

    /** @brief ???7 */
    OUTPUT_IO_7 = 0x0007,

    /** @brief ???8 */
    OUTPUT_IO_8 = 0x0008,

    /** @brief ???9 */
    OUTPUT_IO_9 = 0x0009,

    /** @brief ???10 */
    OUTPUT_IO_10 = 0x000a,

    /** @brief ???11 */
    OUTPUT_IO_11 = 0x000b,

    /** @brief ???12 */
    OUTPUT_IO_12 = 0x000c,

    /** @brief ???13 */
    OUTPUT_IO_13 = 0x000d,

    /** @brief ???14 */
    OUTPUT_IO_14 = 0x000e,

    /** @brief ???15 */
    OUTPUT_IO_15 = 0x000f,

    /** @brief ???16 */
    OUTPUT_IO_16 = 0x0010,

} dvpOutputIo;


/** @brief ????IO
*@deprecated*/
typedef enum dvpInputIo
{
    /** @brief ????1 */
    INPUT_IO_1 = 0x8001,

    /** @brief ????2 */
    INPUT_IO_2 = 0x8002,

    /** @brief ????3 */
    INPUT_IO_3 = 0x8003,

    /** @brief ????4 */
    INPUT_IO_4 = 0x8004,

    /** @brief ????5 */
    INPUT_IO_5 = 0x8005,

    /** @brief ????6 */
    INPUT_IO_6 = 0x8006,

    /** @brief ????7 */
    INPUT_IO_7 = 0x8007,

    /** @brief ????8 */
    INPUT_IO_8 = 0x8008,

} dvpInputIo;


/** @brief ?豸????*/
typedef enum dvpLine
{
    /** @brief ????1 */
    LINE_1 = 0x10001,

    /** @brief ????2 */
    LINE_2 = 0x10002,

    /** @brief ????3 */
    LINE_3 = 0x10003,

    /** @brief ????4 */
    LINE_4 = 0x10004,

    /** @brief ????5 */
    LINE_5 = 0x10005,

    /** @brief ????6 */
    LINE_6 = 0x10006,

    /** @brief ????7 */
    LINE_7 = 0x10007,

    /** @brief ????8 */
    LINE_8 = 0x10008,

    /** @brief ????9 */
    LINE_9 = 0x10009,

    /** @brief ????10 */
    LINE_10 = 0x1000a,

    /** @brief ????11 */
    LINE_11 = 0x1000b,

    /** @brief ????12 */
    LINE_12 = 0x1000c,

    /** @brief ????13 */
    LINE_13 = 0x1000d,

    /** @brief ????14 */
    LINE_14 = 0x1000e,

    /** @brief ????15 */
    LINE_15 = 0x1000f,

    /** @brief ????16 */
    LINE_16 = 0x10010,

} dvpLine;


/** @brief ??????*/
typedef enum dvpLineMode
{
    /** @brief ??????????? */
    LINE_MODE_INPUT = 0,

    /** @brief ?????????? */
    LINE_MODE_OUTPUT = 1,

} dvpLineMode;


/** @brief ???????????*/
typedef enum dvpLineSource
{
    /** @brief ????????? */
    OUTPUT_SOURCE_NORMAL = 0,

    /** @brief ???????? */
    OUTPUT_SOURCE_STROBE = 1,

    /** @brief PWM??? */
    OUTPUT_SOURCE_PWM = 2,

    /** @brief PULSE??? */
    OUTPUT_SOURCE_PULSE = 0x10,

} dvpLineSource;


/** @brief ?????????*/
typedef enum dvpTriggerLineMode
{
    /** @brief ??? */
    TRIGGER_LINE_MODE_NORMAL = 0,

    /** @brief ????????????????? */
    TRIGGER_LINE_MODE_BULB = 1,

} dvpTriggerLineMode;


/** @brief ?????*/
typedef enum dvpTriggerSource
{
    /** @brief @link #dvpTriggerFire ???@endlink???? */
    TRIGGER_SOURCE_SOFTWARE = 0,

    /** @brief @link #dvpLine::LINE_1 ????1@endlink???? */
    TRIGGER_SOURCE_LINE1 = 1,

    /** @brief @link #dvpLine::LINE_2 ????2@endlink???? */
    TRIGGER_SOURCE_LINE2 = 2,

    /** @brief @link #dvpLine::LINE_3 ????3@endlink???? */
    TRIGGER_SOURCE_LINE3 = 3,

    /** @brief @link #dvpLine::LINE_4 ????4@endlink???? */
    TRIGGER_SOURCE_LINE4 = 4,

    /** @brief @link #dvpLine::LINE_5 ????5@endlink???? */
    TRIGGER_SOURCE_LINE5 = 5,

    /** @brief @link #dvpLine::LINE_6 ????6@endlink???? */
    TRIGGER_SOURCE_LINE6 = 6,

    /** @brief @link #dvpLine::LINE_7 ????7@endlink???? */
    TRIGGER_SOURCE_LINE7 = 7,

    /** @brief @link #dvpLine::LINE_8 ????8@endlink???? */
    TRIGGER_SOURCE_LINE8 = 8,

} dvpTriggerSource;


/** @brief ?????????????λ??*/
typedef enum dvpFirstPosition
{
    /** @brief ????? */
    UP_LEFT = 0,

    /** @brief ????? */
    UP_RIGHT = 1,

    /** @brief ????? */
    BOTTOM_LEFT = 2,

    /** @brief ????? */
    BOTTOM_RIGHT = 3,

} dvpFirstPosition;


/** @brief ?豸????
*@note ???"??"???????磺@code dvpOpen(0, dvpOpenMode(OPEN_NORMAL | OPEN_DEBUG), &handle) @endcode*/
typedef enum dvpOpenMode
{
    /** @brief ????? */
    OPEN_OFFLINE = 0,

    /** @brief ??????豸 */
    OPEN_NORMAL = 1<<0,

    /** @brief ??????????豸?????????????????????????????????????????????? */
    OPEN_DEBUG = 1<<3,

    /** @brief ???????????????????????? */
    HIGH_PRIORITY = 1<<4,

    /** @brief ???????IP */
    OPEN_AUTOIP = 1<<5,

} dvpOpenMode;


/** @brief ???????@see dvpGetStreamState*/
typedef enum dvpStreamState
{
    /** @brief ????@see dvpStop */
    STATE_STOPED = 0,

    /** @brief ??????@see dvpStart */
    STATE_STARTED = 2,

} dvpStreamState;


/** @brief ?????????*/
typedef enum dvpCurveStyle
{
    /** @brief ?????? */
    CURVE_STYLE_LINE = 0,

    /** @brief ?????? */
    CURVE_STYLE_WAVE = 1,

} dvpCurveStyle;


/** @brief ???????
*@note ????洢??????洢????*/
typedef enum dvpUserSet
{
    /** @brief ??????????
*@note ??????????д?? */
    USER_SET_DEFAULT = 0,

    /** @brief ???????1 */
    USER_SET_1 = 1,

    /** @brief ???????2 */
    USER_SET_2 = 2,

} dvpUserSet;


/** @brief ??????*/
typedef enum dvpBufferMode
{
    /** @brief ????????????????????? */
    BUFFER_MODE_NEWEST = 0,

    /** @brief ?????????? */
    BUFFER_MODE_FIFO = 1,

} dvpBufferMode;


/** @brief ?豸????*/
typedef enum dvpDeviceType
{
    /** @brief δ????? */
    DEVICE_TYPE_UNKNOWN = 0,

    /** @brief USB2.0??????? */
    DEVICE_TYPE_USB2_CAMERA = 10,

    /** @brief USB3.0??????? */
    DEVICE_TYPE_USB3_CAMERA = 20,

    /** @brief ???????????? */
    DEVICE_TYPE_GLAN_CAMERA = 30,

    /** @brief ????????????? */
    DEVICE_TYPE_XGIGE_CAMERA = 40,

    /** @brief ??????????? */
    DEVICE_TYPE_XGIGE_GRABBER = 100,

} dvpDeviceType;


/** @brief ??????????棬??????????*/
typedef enum dvpReportPart
{
    /** @brief ????δ????????? */
    PART_DEFAULT = 0x00,

    /** @brief ????? */
    PART_LINK = 0x10,

    /** @brief ??????? */
    PART_CONTROL = 0x20,

    /** @brief ????????????? */
    PART_STREAM = 0x30,

    /** @brief ??????????? */
    PART_TRIG = 0x40,

    /** @brief GPIO??????? */
    PART_GPIO = 0x50,

    /** @brief ???Ч????? */
    PART_IMAGE = 0x60,

} dvpReportPart;


/** @brief ???????????????*/
typedef enum dvpReportLevel
{
    /** @brief ???????? */
    LEVEL_INFO = 0x10,

    /** @brief ???????? */
    LEVEL_PROBLEM = 0x40,

} dvpReportLevel;


/** @brief ???б??????????
*@note ????DVP_STATUS_OK???????
*@note ????DVP_STATUS_OK??????????
*@warning С??DVP_STATUS_OK????????*/
typedef enum dvpStatus
{
    /** @brief ??????????????????κζ??? */
    DVP_STATUS_IGNORED = 7,

    /** @brief ??????????????? */
    DVP_STATUS_NEED_OTHER = 6,

    /** @brief ????????????Σ????????????? */
    DVP_STATUS_NEXT_STAGE = 5,

    /** @brief ???????β?????????? */
    DVP_STATUS_BUSY = 4,

    /** @brief ??????????????γ??? */
    DVP_STATUS_WAIT = 3,

    /** @brief ??????У???????????? */
    DVP_STATUS_IN_PROCESS = 2,

    /** @brief ??????? */
    DVP_STATUS_OK = 1,

    /** @brief ??????? */
    DVP_STATUS_FAILED = 0,

    /** @brief δ????? */
    DVP_STATUS_UNKNOW = -1,

    /** @brief ?????ù??? */
    DVP_STATUS_NOT_SUPPORTED = -2,

    /** @brief ?????δ??? */
    DVP_STATUS_NOT_INITIALIZED = -3,

    /** @brief ??????Ч */
    DVP_STATUS_PARAMETER_INVALID = -4,

    /** @brief ??????? */
    DVP_STATUS_PARAMETER_OUT_OF_BOUND = -5,

    /** @brief ????δ?? */
    DVP_STATUS_UNENABLED = -6,

    /** @brief δ??????豸 */
    DVP_STATUS_UNCONNECTED = -7,

    /** @brief ??????Ч */
    DVP_STATUS_NOT_VALID = -8,

    /** @brief ?豸??? */
    DVP_STATUS_UNPLAY = -9,

    /** @brief δ???? */
    DVP_STATUS_NOT_STARTED = -10,

    /** @brief δ?? */
    DVP_STATUS_NOT_STOPPED = -11,

    /** @brief δ????? */
    DVP_STATUS_NOT_READY = -12,

    /** @brief ??Ч???????????????????????????δ?????? */
    DVP_STATUS_INVALID_HANDLE = -13,

    /** @brief ????????? */
    DVP_STATUS_DESCR_FAULT = -20,

    /** @brief ????????? */
    DVP_STATUS_NAME_FAULT = -21,

    /** @brief ??????? */
    DVP_STATUS_VALUE_FAULT = -22,

    /** @brief ?????? */
    DVP_STATUS_LIMITED = -28,

    /** @brief ??????Ч */
    DVP_STATUS_FUNCTION_INVALID = -29,

    /** @brief ??????????У?????????Ч */
    DVP_STATUS_IN_AUTO = -30,

    /** @brief ????????? */
    DVP_STATUS_DENIED = -31,

    /** @brief ??????δ???? */
    DVP_STATUS_BAD_ALIGNMENT = -40,

    /** @brief ?????Ч */
    DVP_STATUS_ADDRESS_INVALID = -41,

    /** @brief ??????С??Ч */
    DVP_STATUS_SIZE_INVALID = -42,

    /** @brief ?????????? */
    DVP_STATUS_OVER_LOAD = -43,

    /** @brief ?????????? */
    DVP_STATUS_UNDER_LOAD = -44,

    /** @brief ??飬У????? */
    DVP_STATUS_CHECKED_FAILED = -50,

    /** @brief ?????? */
    DVP_STATUS_UNUSABLE = -51,

    /** @brief ???ID??Ч????? */
    DVP_STATUS_BID_INVALID = -52,

    /** @brief ??ò??? */
    DVP_STATUS_IMPROPER = -53,

    /** @brief ?????????д */
    DVP_STATUS_READ_ONLY = -54,

    /** @brief ???????????? */
    DVP_STATUS_UNRECOGNIZED_DATA = -55,

    /** @brief ??????? */
    DVP_STATUS_TIME_OUT = -1000,

    /** @brief ???IO???? */
    DVP_STATUS_IO_ERROR = -1001,

    /** @brief ?????? */
    DVP_STATUS_COMM_ERROR = -1002,

    /** @brief ??????? */
    DVP_STATUS_BUS_ERROR = -1003,

    /** @brief ??????? */
    DVP_STATUS_FORMAT_INVALID = -1004,

    /** @brief ??????Ч */
    DVP_STATUS_CONTENT_INVALID = -1005,

    /** @brief I2C??????? */
    DVP_STATUS_I2C_FAULT = -1010,

    /** @brief I2C??????? */
    DVP_STATUS_I2C_ACK_TIMEOUT = -1011,

    /** @brief I2C???????????????????SCL??????????????? */
    DVP_STATUS_I2C_BUS_TIMEOUT = -1012,

    /** @brief SPI??????? */
    DVP_STATUS_SPI_FAULT = -1020,

    /** @brief UART??????? */
    DVP_STATUS_UART_FAULT = -1030,

    /** @brief GPIO??????? */
    DVP_STATUS_GPIO_FAULT = -1040,

    /** @brief USB??????? */
    DVP_STATUS_USB_FAULT = -1050,

    /** @brief PCI??????? */
    DVP_STATUS_PCI_FAULT = -1060,

    /** @brief ???????? */
    DVP_STATUS_PHY_FAULT = -1070,

    /** @brief ??·????? */
    DVP_STATUS_LINK_FAULT = -1080,

    /** @brief ???????? */
    DVP_STATUS_TRANS_FAULT = -1090,

    /** @brief ??з????豸 */
    DVP_STATUS_NO_DEVICE_FOUND = -1100,

    /** @brief δ???????豸 */
    DVP_STATUS_NO_LOGIC_DEVICE_FOUND = -1101,

    /** @brief ?豸????? */
    DVP_STATUS_DEVICE_IS_OPENED = -1102,

    /** @brief ?豸?????? */
    DVP_STATUS_DEVICE_IS_CLOSED = -1103,

    /** @brief ?豸?????????? */
    DVP_STATUS_DEVICE_IS_DISCONNECTED = -1104,

    /** @brief ?豸??????????????? */
    DVP_STATUS_DEVICE_IS_OPENED_BY_ANOTHER = -1105,

    /** @brief ?豸????????? */
    DVP_STATUS_DEVICE_IS_STARTED = -1106,

    /** @brief ?豸????????豸??????????????? */
    DVP_STATUS_DEVICE_IS_STOPPED = -1107,

    /** @brief ?????????? */
    DVP_STATUS_INSUFFICIENT_MEMORY = -1200,

    /** @brief ?洢????д??????????????????д */
    DVP_STATUS_MEMORY_FAULT = -1201,

    /** @brief д??????????д */
    DVP_STATUS_WRITE_PROTECTED = -1202,

    /** @brief ?????????? */
    DVP_STATUS_FILE_CREATE_FAILED = -1300,

    /** @brief ????????Ч */
    DVP_STATUS_FILE_INVALID = -1301,

    /** @brief ????????? */
    DVP_STATUS_FILE_READ_FAILED = -1302,

    /** @brief д???????? */
    DVP_STATUS_FILE_WRITE_FAILED = -1303,

    /** @brief ???????? */
    DVP_STATUS_FILE_OPEN_FAILED = -1304,

    /** @brief ???????????? */
    DVP_STATUS_FILE_CHECKSUM_FAILED = -1305,

    /** @brief ????????????????????δ??????? */
    DVP_STATUS_GRAB_FAILED = -1600,

    /** @brief ?????????????? */
    DVP_STATUS_LOST_DATA = -1601,

    /** @brief δ???????????? */
    DVP_STATUS_EOF_ERROR = -1602,

    /** @brief ??????????????? */
    DVP_STATUS_GRAB_IS_OPENED = -1603,

    /** @brief ???????????????? */
    DVP_STATUS_GRAB_IS_CLOSED = -1604,

    /** @brief ????????????? */
    DVP_STATUS_GRAB_IS_STARTED = -1605,

    /** @brief ??????????? */
    DVP_STATUS_GRAB_IS_STOPPED = -1606,

    /** @brief ?????????????? */
    DVP_STATUS_GRAB_IS_RESTARTING = -1607,

    /** @brief ?????ROI??????Ч */
    DVP_STATUS_ROI_PARAM_INVALID = -1610,

    /** @brief ROI???????? */
    DVP_STATUS_ROI_NOT_SUPPORTED = -1611,

} dvpStatus;


#ifndef _WIN32

#include <stdint.h>

/** @brief 8λ????????? */
typedef uint8_t dvpByte;

/** @brief 32λ?з??????? */
typedef int32_t dvpInt32;

/** @brief 32λ????????? */
typedef uint32_t dvpUint32;

/** @brief 64λ?з??????? */
typedef int64_t dvpInt64;

/** @brief 64λ????????? */
typedef uint64_t dvpUint64;

#else
/** @brief 8λ????????? */
typedef BYTE dvpByte;

/** @brief 32λ?з??????? */
typedef INT32 dvpInt32;

/** @brief 32λ????????? */
typedef UINT32 dvpUint32;

/** @brief 64λ?з??????? */
typedef INT64 dvpInt64;

/** @brief 64λ????????? */
typedef UINT64 dvpUint64;

#endif // _WIN32
/** @brief 128????????? */
typedef dvpUint32 dvpReserved[32];

/** @brief 64??????????? */
typedef char dvpString64[64];

/** @brief 128??????????? */
typedef char dvpString128[128];

/** @brief 32????????????? */
typedef bool dvpBool32[32];

/** @brief 4??3?м???? */
typedef float dvpMatrix[4][3];

/** @brief 3?????????? */
typedef float dvpFloat3c[3];

/** @brief 3??????????? */
typedef dvpUint32 dvpSize3c[3];

/** @brief ??????
*@see dvpOpen
*@see dvpOpenByName */
typedef dvpUint32 dvpHandle;

/** @brief ????????????
*@see dvpStartVideoRecord */
typedef dvpUint32 dvpRecordHandle;

/** @brief ???????? */
typedef const char* dvpStr;

/** @brief ??????? */
typedef struct dvpColorMatrix
{
    /** @brief ???? */
    dvpMatrix matrix;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpColorMatrix;


/** @brief ???У????? */
typedef struct dvpColorCorrection
{
    /** @brief BGR???У????? */
    dvpFloat3c bgr;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpColorCorrection;


/** @brief ????????????? */
typedef struct dvpPoint2f
{
    /** @brief ?????? */
    float X;

    /** @brief ?????? */
    float Y;

} dvpPoint2f;


/** @brief BGR???256??ê?? */
typedef struct dvpPoint2f dvpPoint3c[3][256];

/** @brief BGR???????? */
typedef struct dvpCurveArray
{
    /** @brief BGR?????????? */
    dvpPoint3c point;

    /** @brief BGR??Ч??????????3?? */
    dvpUint32 rows;

    /** @brief BGR?????????Ч?????????????256?? */
    dvpSize3c cols;

} dvpCurveArray;


/** @brief ??????????LUT
*@warning ???????????????????????????????? new dvpCurveLut() ???????????? */
typedef struct dvpCurveLut
{
    /** @brief ????? */
    bool enable;

    /** @brief ?????? */
    dvpCurveStyle style;

    /** @brief ê?????飬??????????ê?????????????????LUT */
    dvpCurveArray array;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpCurveLut;


/** @brief ?????? 
*@see dvpGetCameraInfo
*@see dvpEnum */
typedef struct dvpCameraInfo
{
    /** @brief ?????? */
    dvpString64 Vendor;

    /** @brief ???????? */
    dvpString64 Manufacturer;

    /** @brief ??? */
    dvpString64 Model;

    /** @brief ??? */
    dvpString64 Family;

    /** @brief ?????? */
    dvpString64 LinkName;

    /** @brief ?????????? */
    dvpString64 SensorInfo;

    /** @brief ????汾 */
    dvpString64 HardwareVersion;

    /** @brief ????汾 */
    dvpString64 FirmwareVersion;

    /** @brief ????????汾 */
    dvpString64 KernelVersion;

    /** @brief ?豸?????汾 */
    dvpString64 DscamVersion;

    /** @brief ????豸???? */
    dvpString64 FriendlyName;

    /** @brief ??????? */
    dvpString64 PortInfo;

    /** @brief ???к?
*@note ????????? */
    dvpString64 SerialNumber;

    /** @brief ??????? */
    dvpString128 CameraInfo;

    /** @brief ??????? */
    dvpString128 UserID;

    /** @brief ?????к? */
    dvpString64 OriginalSerialNumber;

    /** @brief ??????? */
    dvpString64 reserved;
} dvpCameraInfo;


/** @brief ???????? */
typedef struct dvpRegionDescr
{
    /** @brief ??С??? */
    dvpInt32 iMinW;

    /** @brief ??С??? */
    dvpInt32 iMinH;

    /** @brief ????? */
    dvpInt32 iMaxW;

    /** @brief ????? */
    dvpInt32 iMaxH;

    /** @brief ?????? */
    dvpInt32 iStepW;

    /** @brief ?????? */
    dvpInt32 iStepH;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpRegionDescr;


/** @brief ?????????????????????
*@see dvpGetRoi
*@see dvpGetAwbRoi
*@see dvpGetAeRoi
*@warning ?????????????????????ο??豸??? */
typedef struct dvpRegion
{
    /** @brief ???????λ?? */
    dvpInt32 X;

    /** @brief ???????λ?? */
    dvpInt32 Y;

    /** @brief ????????0?? */
    dvpInt32 W;

    /** @brief ????????0?? */
    dvpInt32 H;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpRegion;


/** @brief ????
*@see dvpGetFrame */
typedef struct dvpFrame
{
    /** @brief ??? */
    enum dvpImageFormat format;

    /** @brief λ?? */
    enum dvpBits bits;

    /** @brief ????? */
    dvpUint32 uBytes;

    /** @brief ??? */
    dvpInt32 iWidth;

    /** @brief ??? */
    dvpInt32 iHeight;

    /** @brief ???? */
    dvpUint64 uFrameID;

    /** @brief ???? */
    dvpUint64 uTimestamp;

    /** @brief ????????λ????
*@see dvpGetExposure */
    double fExposure;

    /** @brief ???????
*@see dvpGetAnalogGain */
    float fAGain;

    /** @brief ???????????λ??
*@see dvpGetFirstPosition */
    enum dvpFirstPosition position;

    /** @brief ????????
*@see dvpGetFlipHorizontalState */
    bool bFlipHorizontalState;

    /** @brief ???????
*@see dvpGetFlipVerticalState */
    bool bFlipVerticalState;

    /** @brief ??????90??
*@see dvpGetRotateState */
    bool bRotateState;

    /** @brief ???????????
*@see dvpGetRotateOpposite */
    bool bRotateOpposite;

    /** @brief ??????λ */
    dvpUint32 internalFlags;

    /** @brief ?????? */
    dvpUint32 internalValue;

    /** @brief ??δ?????????????????????ID
*@see dvpGetFramesPerTrigger */
    dvpUint64 uTriggerId;

    /** @brief ?????????????????????? */
    dvpUint64 userValue;

    /** @brief ??????? */
    dvpUint32 reserved[24];
} dvpFrame;


/** @brief ?????????????
*@see dvpGetFrameBuffer */
typedef struct dvpFrameBuffer
{
    /** @brief ???? */
    struct dvpFrame frame;

    /** @brief ???????????
*@warning ?????????? */
    dvpPtr(dvpByte) pBuffer;

} dvpFrameBuffer;


/** @brief ???????
*@see dvpEventCallback */
typedef struct dvpVariant
{
    /** @brief ???????? */
    dvpPtr(dvpByte) pData;

    /** @brief ????????? */
    dvpUint32 uSize;

    /** @brief ???????????? */
    dvpString64 name;

} dvpVariant;


/** @brief 64λ???????????? */
typedef struct dvpInt64Descr
{
    /** @brief ???? */
    dvpUint64 iStep;

    /** @brief ??С? */
    dvpUint64 iMin;

    /** @brief ???? */
    dvpUint64 iMax;

    /** @brief ???? */
    dvpUint64 iDefault;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpInt64Descr;


/** @brief ???????????? */
typedef struct dvpIntDescr
{
    /** @brief ???? */
    dvpInt32 iStep;

    /** @brief ??С? */
    dvpInt32 iMin;

    /** @brief ???? */
    dvpInt32 iMax;

    /** @brief ???? */
    dvpInt32 iDefault;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpIntDescr;


/** @brief ????????????????? */
typedef struct dvpUintDescr
{
    /** @brief ???? */
    dvpUint32 uStep;

    /** @brief ??С? */
    dvpUint32 uMin;

    /** @brief ???? */
    dvpUint32 uMax;

    /** @brief ???? */
    dvpUint32 uDefault;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpUintDescr;


/** @brief ?????????????? */
typedef struct dvpFloatDescr
{
    /** @brief ???? */
    float fStep;

    /** @brief ??С? */
    float fMin;

    /** @brief ???? */
    float fMax;

    /** @brief ???? */
    float fDefault;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpFloatDescr;


/** @brief ??????????????? */
typedef struct dvpDoubleDescr
{
    /** @brief ???? */
    double fStep;

    /** @brief ??С? */
    double fMin;

    /** @brief ???? */
    double fMax;

    /** @brief ???? */
    double fDefault;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpDoubleDescr;


/** @brief 64λ????????????????? */
typedef struct dvpUint64Descr
{
    /** @brief ???? */
    dvpUint64 uStep;

    /** @brief ??С? */
    dvpUint64 uMin;

    /** @brief ???? */
    dvpUint64 uMax;

    /** @brief ???? */
    dvpUint64 uDefault;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpUint64Descr;


/** @brief ????????? */
typedef struct dvpSelectionDescr
{
    /** @brief ??????? */
    dvpUint32 uDefault;

    /** @brief ???????? */
    dvpUint32 uCount;

    /** @brief ??????????? */
    bool bNeedStop;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpSelectionDescr;


/** @brief ????? */
typedef struct dvpSelection
{
    /** @brief ????????? */
    dvpString64 string;

    /** @brief ???? */
    dvpInt32 iIndex;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpSelection;


/** @brief ???????
*@see dvpGetTriggerModeSelDetail */
typedef struct dvpResolutionMode
{
    /** @brief ???????????? */
    struct dvpSelection selection;

    /** @brief ???? */
    struct dvpRegionDescr region;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpResolutionMode;


/** @brief ????Roi
*@see dvpGetQuickRoiSelDetail */
typedef struct dvpQuickRoi
{
    /** @brief ????? */
    struct dvpSelection selection;

    /** @brief ??????????? */
    struct dvpRegion roi;

    /** @brief ??????? */
    struct dvpResolutionMode mode;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpQuickRoi;


/** @brief ????? */
typedef struct dvpFormatSelection
{
    /** @brief ???????????? */
    struct dvpSelection selection;

    /** @brief ???????????? */
    enum dvpStreamFormat format;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpFormatSelection;


/** @brief ?????
*@see dvpGetFrameCount */
typedef struct dvpFrameCount
{
    /** @brief ??????????????????????? */
    dvpUint32 uFrameCount;

    /** @brief ??????????????????? */
    dvpUint32 uFrameDrop;

    /** @brief ????????????????? */
    dvpUint32 uFrameIgnore;

    /** @brief ????????? */
    dvpUint32 uFrameError;

    /** @brief ????????????? */
    dvpUint32 uFrameOK;

    /** @brief ???? / ???????Ч? */
    dvpUint32 uFrameOut;

    /** @brief ???? */
    dvpUint32 uFrameResend;

    /** @brief ?????????? */
    dvpUint32 uFrameProc;

    /** @brief ?????? */
    float fFrameRate;

    /** @brief ???????? */
    float fProcRate;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpFrameCount;


/** @brief ???IO???
*@see dvpGetUserIoInfo */
typedef struct dvpUserIoInfo
{
    /** @brief ?????????IO */
    dvpBool32 inputValid;

    /** @brief ????????IO */
    dvpBool32 outputValid;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpUserIoInfo;


/** @brief ???IO???
*@see dvpGetLineInfo */
typedef struct dvpLineInfo
{
    /** @brief ?????IO */
    dvpBool32 valid;

    /** @brief ????IO */
    dvpBool32 bidir;

    /** @brief ??????????? */
    dvpBool32 inverter;

    /** @brief ??????????????????? */
    dvpBool32 user;

    /** @brief ??????strobe??? */
    dvpBool32 strobe;

    /** @brief ??????pwm??? */
    dvpBool32 pwm;

    /** @brief ??????timer??? */
    dvpBool32 timer;

    /** @brief ??????uart??? */
    dvpBool32 uart;

    /** @brief ??????pulse??? */
    dvpBool32 pulse;

    /** @brief ????????????? */
    dvpBool32 trigger;

    /** @brief ??????? */
    dvpUint32 reserved[16];
} dvpLineInfo;


/** @brief ??????????
*@see dvpGetAeConfig */
typedef struct dvpAeConfig
{
    /** @brief ??С???????????λ???? */
    double fExposureMin;

    /** @brief ??????????????λ???? */
    double fExposureMax;

    /** @brief ?????1 */
    double reserved1;

    /** @brief ??С???????? */
    float fGainMin;

    /** @brief ??????????? */
    float fGainMax;

    /** @brief ?????2 */
    float reserved2;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpAeConfig;


/** @brief Sensor(??????)???
*@see dvpGetSensorInfo */
typedef struct dvpSensorInfo
{
    /** @brief ????????? */
    dvpString64 descr;

    /** @brief ?????????? */
    enum dvpSensorType sensor;

    /** @brief ?????????? */
    enum dvpSensorPixel pixel;

    /** @brief ???? */
    struct dvpRegionDescr region;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpSensorInfo;


/** @brief ??????????????
*@see dvpGetFunctionInfo */
typedef struct dvpFunctionInfo
{
    /** @brief ????????????? */
    bool bTrigger;

    /** @brief ?????????ISP???? */
    bool bHardwareIsp;

    /** @brief ??????UserSet???? */
    bool bUserSet;

    /** @brief ??????????????? */
    bool bHflip;

    /** @brief ??????????????? */
    bool bVflip;

    /** @brief ???????????? */
    bool bInverse;

    /** @brief ?????????gige?????@link #dvpLine ???????@endlink???? */
    bool bLine;

    /** @brief ????????????
*@see dvpGetCoolerState */
    bool bCooler;

    /** @brief ????????????? */
    bool bTemperature;

    /** @brief ???? */
    bool bReserved3;

    /** @brief ??????? */
    dvpUint32 reserved[30];
} dvpFunctionInfo;


/** @brief ?豸???
*@see dvpGetTemperatureInfo */
typedef struct dvpTemperatureInfo
{
    /** @brief ?豸????? */
    float fDevice;

    /** @brief ??????????? */
    float fSensor;

    /** @brief о?1????? */
    float fChip1;

    /** @brief о?2????? */
    float fChip2;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpTemperatureInfo;


/** @brief ?????????
*@see dvpGetBufferConfig */
typedef struct dvpBufferConfig
{
    /** @brief ???湤???? */
    enum dvpBufferMode mode;

    /** @brief ??????д?С
*@see dvpGetBufferQueueSizeDescr
*@warning ????????????????????????????????????????? */
    dvpUint32 uQueueSize;

    /** @brief ?????????????????????????
* @note true ?????????? false ?????????????????? */
    bool bDropNew;

    /** @brief ???????????????
*@note??????????????С??????λ??????????棬????????sensor???????????λ???????????????? */
    bool bLite;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpBufferConfig;


/** @brief ?д???????
*@see dvpGetLineTriggerConfig
* @note??????????????Ч */
typedef struct dvpLineTriggerConfig
{
    /** @brief ???? */
    dvpUint32 uPreDiv;

    /** @brief ??? */
    dvpUint32 uMult;

    /** @brief ??? */
    dvpUint32 uDiv;

    /** @brief ??????? */
    dvpReserved reserved;
} dvpLineTriggerConfig;


/**
*@brief ?????????
*@param[in] handle ??????
*@param[out] pCameraInfo ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*@see dvpGetDeviceType
*/
dvp2api dvpStatus dvpGetCameraInfo(dvpHandle handle, dvpCameraInfo *pCameraInfo);


/**
*@brief ????????????
*@param[in] handle ??????
*@param[out] pSensorInfo ?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*/
dvp2api dvpStatus dvpGetSensorInfo(dvpHandle handle, dvpSensorInfo *pSensorInfo);


/**
*@brief ????????
*@param[in] handle ??????
*@param[out] pFrameCount ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*/
dvp2api dvpStatus dvpGetFrameCount(dvpHandle handle, dvpFrameCount *pFrameCount);


/**
*@brief ??????IO??Ч???
*@param[in] handle ??????
*@param[out] pUserIoInfo ???IO??Ч???
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*@deprecated
*/
dvp2api dvpStatus dvpGetUserIoInfo(dvpHandle handle, dvpUserIoInfo *pUserIoInfo);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[out] pLineInfo ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*/
dvp2api dvpStatus dvpGetLineInfo(dvpHandle handle, dvpLineInfo *pLineInfo);


/**
*@brief ????????????????λ??
*@param[in] handle ??????
*@param[out] pFirstPosition ?????????????λ??
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*/
dvp2api dvpStatus dvpGetFirstPosition(dvpHandle handle, dvpFirstPosition *pFirstPosition);


/**
*@brief ??????????
*@param[in] handle ??????
*@param[out] pFunctionInfo ???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*@note ???????????????????????API????磬????????????ò????????е???????????????????????????
*/
dvp2api dvpStatus dvpGetFunctionInfo(dvpHandle handle, dvpFunctionInfo *pFunctionInfo);


/**
*@brief ????豸????
*@param[in] handle ??????
*@param[out] pDeviceType ?豸????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*@see dvpGetCameraInfo
*/
dvp2api dvpStatus dvpGetDeviceType(dvpHandle handle, dvpDeviceType *pDeviceType);


/**
*@brief ????豸??????
*@param[in] handle ??????
*@param[out] pTemperatureInfo ?豸??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_INFORMATION
*@see dvpGetCoolerState
*/
dvp2api dvpStatus dvpGetTemperatureInfo(dvpHandle handle, dvpTemperatureInfo *pTemperatureInfo);


/**
*@brief ??????????????
*@param[in] handle ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@note ????@link #dvpSetTriggerSource ????@endlink??@link #dvpTriggerSource::TRIGGER_SOURCE_SOFTWARE ????????@endlink
*/
dvp2api dvpStatus dvpTriggerFire(dvpHandle handle);


/**
*@brief ???????У?????
*@param[in] handle ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@see dvpSetDefectFixState
*@see dvpSetAutoDefectFixState
*@note ??????????Sensor????????????????????????????
*@note ??????Щ????洢?????????????????????
*/
dvp2api dvpStatus dvpCreateDefectFixInfo(dvpHandle handle);


/**
*@brief ???????У?????
*@param[in] handle ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@note ??????????????????????????????
*@note ??????Щ????洢?????????????????????
*/
dvp2api dvpStatus dvpCreateFlatFieldInfo(dvpHandle handle);


/**
*@brief ??λ?豸
*@param[in] handle ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP2_API_BASE
*@note ???????????????????λ????豸??
*/
dvp2api dvpStatus dvpResetDevice(dvpHandle handle);


/**
*@brief ????????/????????
*@param[in] handle ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP2_API_BASE
*@see dvpHold
*??????????@link #dvpHold ???@endlink?????
*/
dvp2api dvpStatus dvpRestart(dvpHandle handle);


/**
*@brief ????????????
*@param[in] handle ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP2_API_BASE
*@see dvpRestart
*@see dvpIsHold
*@note ????????????????????и?????????????@link #dvpStart ?????????????????@endlink???????@link #dvpRestart ????????????????@endlink?????????????????????????
*/
dvp2api dvpStatus dvpHold(dvpHandle handle);


/**
*@brief ????????
*@param[in] handle ??????
*@param[out] pGamma ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetColorSolutionSel
*@see dvpSetGammaState
*@see dvpGetGammaState
*@see dvpGetGammaDescr
*@see dvpSetGamma
*@note ?????????????????????????
*/
dvp2api dvpStatus dvpGetGamma(dvpHandle handle, dvpInt32 *pGamma);


/**
*@brief ?????????
*@param[in] handle ??????
*@param[in] Gamma ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetColorSolutionSel
*@see dvpSetGammaState
*@see dvpGetGammaState
*@see dvpGetGammaDescr
*@see dvpGetGamma
*@note ?????????????????????????
*/
dvp2api dvpStatus dvpSetGamma(dvpHandle handle, dvpInt32 Gamma);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[out] pGammaDescr ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetColorSolutionSel
*@see dvpSetGammaState
*@see dvpGetGammaState
*@see dvpSetGamma
*@see dvpGetGamma
*/
dvp2api dvpStatus dvpGetGammaDescr(dvpHandle handle, dvpIntDescr *pGammaDescr);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[out] pGammaState ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetColorSolutionSel
*@see dvpSetGamma
*@see dvpGetGamma
*@see dvpGetGammaDescr
*@see dvpSetGammaState
*/
dvp2api dvpStatus dvpGetGammaState(dvpHandle handle, bool *pGammaState);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[in] GammaState ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetColorSolutionSel
*@see dvpSetGamma
*@see dvpGetGamma
*@see dvpGetGammaDescr
*@see dvpGetGammaState
*/
dvp2api dvpStatus dvpSetGammaState(dvpHandle handle, bool GammaState);


/**
*@brief ?????????
*@param[in] handle ??????
*@param[out] pContrast ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetBlackLevel
*@see dvpSetContrastState
*@see dvpGetContrastState
*@see dvpGetContrastDescr
*@see dvpSetContrast
*@note ????????
*/
dvp2api dvpStatus dvpGetContrast(dvpHandle handle, dvpInt32 *pContrast);


/**
*@brief ?????????
*@param[in] handle ??????
*@param[in] Contrast ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetBlackLevel
*@see dvpSetContrastState
*@see dvpGetContrastState
*@see dvpGetContrastDescr
*@see dvpGetContrast
*@note ????????
*/
dvp2api dvpStatus dvpSetContrast(dvpHandle handle, dvpInt32 Contrast);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[out] pContrastDescr ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetBlackLevel
*@see dvpSetContrastState
*@see dvpGetContrastState
*@see dvpSetContrast
*@see dvpGetContrast
*/
dvp2api dvpStatus dvpGetContrastDescr(dvpHandle handle, dvpIntDescr *pContrastDescr);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pContrastState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetBlackLevel
*@see dvpSetContrast
*@see dvpGetContrast
*@see dvpGetContrastDescr
*@see dvpSetContrastState
*/
dvp2api dvpStatus dvpGetContrastState(dvpHandle handle, bool *pContrastState);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] ContrastState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetBlackLevel
*@see dvpSetContrast
*@see dvpGetContrast
*@see dvpGetContrastDescr
*@see dvpGetContrastState
*/
dvp2api dvpStatus dvpSetContrastState(dvpHandle handle, bool ContrastState);


/**
*@brief ??????Roi(???????????????????)
*@param[in] handle ??????
*@param[out] pRoi ???Roi(???????????????????)
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetQuickRoiSel
*@see dvpSetRoiState
*@see dvpGetRoiState
*@see dvpGetRoiDescr
*@see dvpSetRoi
*/
dvp2api dvpStatus dvpGetRoi(dvpHandle handle, dvpRegion *pRoi);


/**
*@brief ???????Roi(???????????????????)
*@param[in] handle ??????
*@param[in] Roi ???Roi(???????????????????)
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetQuickRoiSel
*@see dvpSetRoiState
*@see dvpGetRoiState
*@see dvpGetRoiDescr
*@see dvpGetRoi
*/
dvp2api dvpStatus dvpSetRoi(dvpHandle handle, dvpRegion Roi);


/**
*@brief ??????Roi(???????????????????)?????????
*@param[in] handle ??????
*@param[out] pRoiDescr ???Roi(???????????????????)?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetQuickRoiSel
*@see dvpSetRoiState
*@see dvpGetRoiState
*@see dvpSetRoi
*@see dvpGetRoi
*/
dvp2api dvpStatus dvpGetRoiDescr(dvpHandle handle, dvpRegionDescr *pRoiDescr);


/**
*@brief ??????Roi(???????????????????)??????????
*@param[in] handle ??????
*@param[out] pRoiState ???Roi(???????????????????)??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetQuickRoiSel
*@see dvpSetRoi
*@see dvpGetRoi
*@see dvpGetRoiDescr
*@see dvpSetRoiState
*/
dvp2api dvpStatus dvpGetRoiState(dvpHandle handle, bool *pRoiState);


/**
*@brief ???????Roi(???????????????????)??????????
*@param[in] handle ??????
*@param[in] RoiState ???Roi(???????????????????)??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetQuickRoiSel
*@see dvpSetRoi
*@see dvpGetRoi
*@see dvpGetRoiDescr
*@see dvpGetRoiState
*/
dvp2api dvpStatus dvpSetRoiState(dvpHandle handle, bool RoiState);


/**
*@brief ????????????λ?K??
*@param[in] handle ??????
*@param[out] pColorTemperature ?????????λ?K??
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetColorTemperatureState
*@see dvpGetColorTemperatureState
*@see dvpGetColorTemperatureDescr
*@see dvpSetColorTemperature
*@note ??????????
*/
dvp2api dvpStatus dvpGetColorTemperature(dvpHandle handle, dvpInt32 *pColorTemperature);


/**
*@brief ?????????????λ?K??
*@param[in] handle ??????
*@param[in] ColorTemperature ?????????λ?K??
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetColorTemperatureState
*@see dvpGetColorTemperatureState
*@see dvpGetColorTemperatureDescr
*@see dvpGetColorTemperature
*@note ??????????
*/
dvp2api dvpStatus dvpSetColorTemperature(dvpHandle handle, dvpInt32 ColorTemperature);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[out] pColorTemperatureDescr ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetColorTemperatureState
*@see dvpGetColorTemperatureState
*@see dvpSetColorTemperature
*@see dvpGetColorTemperature
*/
dvp2api dvpStatus dvpGetColorTemperatureDescr(dvpHandle handle, dvpIntDescr *pColorTemperatureDescr);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[out] pColorTemperatureState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetColorTemperature
*@see dvpGetColorTemperature
*@see dvpGetColorTemperatureDescr
*@see dvpSetColorTemperatureState
*/
dvp2api dvpStatus dvpGetColorTemperatureState(dvpHandle handle, bool *pColorTemperatureState);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] ColorTemperatureState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetColorTemperature
*@see dvpGetColorTemperature
*@see dvpGetColorTemperatureDescr
*@see dvpGetColorTemperatureState
*/
dvp2api dvpStatus dvpSetColorTemperatureState(dvpHandle handle, bool ColorTemperatureState);


/**
*@brief ????????
*@param[in] handle ??????
*@param[out] pSharpness ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetSharpnessState
*@see dvpGetSharpnessState
*@see dvpGetSharpnessDescr
*@see dvpSetSharpness
*@note ??????????
*/
dvp2api dvpStatus dvpGetSharpness(dvpHandle handle, dvpInt32 *pSharpness);


/**
*@brief ?????????
*@param[in] handle ??????
*@param[in] Sharpness ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetSharpnessState
*@see dvpGetSharpnessState
*@see dvpGetSharpnessDescr
*@see dvpGetSharpness
*@note ??????????
*/
dvp2api dvpStatus dvpSetSharpness(dvpHandle handle, dvpInt32 Sharpness);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[out] pSharpnessDescr ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetSharpnessState
*@see dvpGetSharpnessState
*@see dvpSetSharpness
*@see dvpGetSharpness
*/
dvp2api dvpStatus dvpGetSharpnessDescr(dvpHandle handle, dvpIntDescr *pSharpnessDescr);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[out] pSharpnessState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetSharpness
*@see dvpGetSharpness
*@see dvpGetSharpnessDescr
*@see dvpSetSharpnessState
*/
dvp2api dvpStatus dvpGetSharpnessState(dvpHandle handle, bool *pSharpnessState);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] SharpnessState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetSharpness
*@see dvpGetSharpness
*@see dvpGetSharpnessDescr
*@see dvpGetSharpnessState
*/
dvp2api dvpStatus dvpSetSharpnessState(dvpHandle handle, bool SharpnessState);


/**
*@brief ??????????
*@param[in] handle ??????
*@param[out] pSaturation ???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetSaturationState
*@see dvpGetSaturationState
*@see dvpGetSaturationDescr
*@see dvpSetSaturation
*@note ??????????
*/
dvp2api dvpStatus dvpGetSaturation(dvpHandle handle, dvpInt32 *pSaturation);


/**
*@brief ??????????
*@param[in] handle ??????
*@param[in] Saturation ???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetSaturationState
*@see dvpGetSaturationState
*@see dvpGetSaturationDescr
*@see dvpGetSaturation
*@note ??????????
*/
dvp2api dvpStatus dvpSetSaturation(dvpHandle handle, dvpInt32 Saturation);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pSaturationDescr ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetSaturationState
*@see dvpGetSaturationState
*@see dvpSetSaturation
*@see dvpGetSaturation
*/
dvp2api dvpStatus dvpGetSaturationDescr(dvpHandle handle, dvpIntDescr *pSaturationDescr);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[out] pSaturationState ??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetSaturation
*@see dvpGetSaturation
*@see dvpGetSaturationDescr
*@see dvpSetSaturationState
*/
dvp2api dvpStatus dvpGetSaturationState(dvpHandle handle, bool *pSaturationState);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[in] SaturationState ??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetSaturation
*@see dvpGetSaturation
*@see dvpGetSaturationDescr
*@see dvpGetSaturationState
*/
dvp2api dvpStatus dvpSetSaturationState(dvpHandle handle, bool SaturationState);


/**
*@brief ???2D??????
*@param[in] handle ??????
*@param[out] pNoiseReduct2d 2D??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetSharpness
*@see dvpGetNoiseReduct3d
*@see dvpSetNoiseReduct2dState
*@see dvpGetNoiseReduct2dState
*@see dvpGetNoiseReduct2dDescr
*@see dvpSetNoiseReduct2d
*@note ?????????????????????????
*/
dvp2api dvpStatus dvpGetNoiseReduct2d(dvpHandle handle, dvpInt32 *pNoiseReduct2d);


/**
*@brief ????2D??????
*@param[in] handle ??????
*@param[in] NoiseReduct2d 2D??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetSharpness
*@see dvpGetNoiseReduct3d
*@see dvpSetNoiseReduct2dState
*@see dvpGetNoiseReduct2dState
*@see dvpGetNoiseReduct2dDescr
*@see dvpGetNoiseReduct2d
*@note ?????????????????????????
*/
dvp2api dvpStatus dvpSetNoiseReduct2d(dvpHandle handle, dvpInt32 NoiseReduct2d);


/**
*@brief ???2D????????????
*@param[in] handle ??????
*@param[out] pNoiseReduct2dDescr 2D????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetSharpness
*@see dvpGetNoiseReduct3d
*@see dvpSetNoiseReduct2dState
*@see dvpGetNoiseReduct2dState
*@see dvpSetNoiseReduct2d
*@see dvpGetNoiseReduct2d
*/
dvp2api dvpStatus dvpGetNoiseReduct2dDescr(dvpHandle handle, dvpIntDescr *pNoiseReduct2dDescr);


/**
*@brief ???2D????????????
*@param[in] handle ??????
*@param[out] pNoiseReduct2dState 2D????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetSharpness
*@see dvpGetNoiseReduct3d
*@see dvpSetNoiseReduct2d
*@see dvpGetNoiseReduct2d
*@see dvpGetNoiseReduct2dDescr
*@see dvpSetNoiseReduct2dState
*/
dvp2api dvpStatus dvpGetNoiseReduct2dState(dvpHandle handle, bool *pNoiseReduct2dState);


/**
*@brief ????2D????????????
*@param[in] handle ??????
*@param[in] NoiseReduct2dState 2D????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetSharpness
*@see dvpGetNoiseReduct3d
*@see dvpSetNoiseReduct2d
*@see dvpGetNoiseReduct2d
*@see dvpGetNoiseReduct2dDescr
*@see dvpGetNoiseReduct2dState
*/
dvp2api dvpStatus dvpSetNoiseReduct2dState(dvpHandle handle, bool NoiseReduct2dState);


/**
*@brief ???3D??????
*@param[in] handle ??????
*@param[out] pNoiseReduct3d 3D??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetNoiseReduct3dState
*@see dvpGetNoiseReduct3dState
*@see dvpGetNoiseReduct3dDescr
*@see dvpSetNoiseReduct3d
*@note ????Ч????????????????
*/
dvp2api dvpStatus dvpGetNoiseReduct3d(dvpHandle handle, dvpInt32 *pNoiseReduct3d);


/**
*@brief ????3D??????
*@param[in] handle ??????
*@param[in] NoiseReduct3d 3D??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetNoiseReduct3dState
*@see dvpGetNoiseReduct3dState
*@see dvpGetNoiseReduct3dDescr
*@see dvpGetNoiseReduct3d
*@note ????Ч????????????????
*/
dvp2api dvpStatus dvpSetNoiseReduct3d(dvpHandle handle, dvpInt32 NoiseReduct3d);


/**
*@brief ???3D????????????
*@param[in] handle ??????
*@param[out] pNoiseReduct3dDescr 3D????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetNoiseReduct3dState
*@see dvpGetNoiseReduct3dState
*@see dvpSetNoiseReduct3d
*@see dvpGetNoiseReduct3d
*/
dvp2api dvpStatus dvpGetNoiseReduct3dDescr(dvpHandle handle, dvpIntDescr *pNoiseReduct3dDescr);


/**
*@brief ???3D????????????
*@param[in] handle ??????
*@param[out] pNoiseReduct3dState 3D????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetNoiseReduct3d
*@see dvpGetNoiseReduct3d
*@see dvpGetNoiseReduct3dDescr
*@see dvpSetNoiseReduct3dState
*/
dvp2api dvpStatus dvpGetNoiseReduct3dState(dvpHandle handle, bool *pNoiseReduct3dState);


/**
*@brief ????3D????????????
*@param[in] handle ??????
*@param[in] NoiseReduct3dState 3D????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetNoiseReduct2d
*@see dvpSetNoiseReduct3d
*@see dvpGetNoiseReduct3d
*@see dvpGetNoiseReduct3dDescr
*@see dvpGetNoiseReduct3dState
*/
dvp2api dvpStatus dvpSetNoiseReduct3dState(dvpHandle handle, bool NoiseReduct3dState);


/**
*@brief ?????????
*@param[in] handle ??????
*@param[out] pBlackLevel ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetContrast
*@see dvpSetBlackLevelState
*@see dvpGetBlackLevelState
*@see dvpGetBlackLevelDescr
*@see dvpSetBlackLevel
*@note ????????????????????
*/
dvp2api dvpStatus dvpGetBlackLevel(dvpHandle handle, float *pBlackLevel);


/**
*@brief ???ú?????
*@param[in] handle ??????
*@param[in] BlackLevel ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetContrast
*@see dvpSetBlackLevelState
*@see dvpGetBlackLevelState
*@see dvpGetBlackLevelDescr
*@see dvpGetBlackLevel
*@note ????????????????????
*/
dvp2api dvpStatus dvpSetBlackLevel(dvpHandle handle, float BlackLevel);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[out] pBlackLevelDescr ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetContrast
*@see dvpSetBlackLevelState
*@see dvpGetBlackLevelState
*@see dvpSetBlackLevel
*@see dvpGetBlackLevel
*/
dvp2api dvpStatus dvpGetBlackLevelDescr(dvpHandle handle, dvpFloatDescr *pBlackLevelDescr);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pBlackLevelState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetContrast
*@see dvpSetBlackLevel
*@see dvpGetBlackLevel
*@see dvpGetBlackLevelDescr
*@see dvpSetBlackLevelState
*/
dvp2api dvpStatus dvpGetBlackLevelState(dvpHandle handle, bool *pBlackLevelState);


/**
*@brief ???ú????????????
*@param[in] handle ??????
*@param[in] BlackLevelState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetContrast
*@see dvpSetBlackLevel
*@see dvpGetBlackLevel
*@see dvpGetBlackLevelDescr
*@see dvpGetBlackLevelState
*/
dvp2api dvpStatus dvpSetBlackLevelState(dvpHandle handle, bool BlackLevelState);


/**
*@brief ?????????????????????λ????
*@param[in] handle ??????
*@param[out] pSoftTriggerLoop ??????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetSoftTriggerLoopState
*@see dvpGetSoftTriggerLoopState
*@see dvpGetSoftTriggerLoopDescr
*@see dvpSetSoftTriggerLoop
*/
dvp2api dvpStatus dvpGetSoftTriggerLoop(dvpHandle handle, double *pSoftTriggerLoop);


/**
*@brief ??????????????????????λ????
*@param[in] handle ??????
*@param[in] SoftTriggerLoop ??????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetSoftTriggerLoopState
*@see dvpGetSoftTriggerLoopState
*@see dvpGetSoftTriggerLoopDescr
*@see dvpGetSoftTriggerLoop
*/
dvp2api dvpStatus dvpSetSoftTriggerLoop(dvpHandle handle, double SoftTriggerLoop);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@param[out] pSoftTriggerLoopDescr ????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetSoftTriggerLoopState
*@see dvpGetSoftTriggerLoopState
*@see dvpSetSoftTriggerLoop
*@see dvpGetSoftTriggerLoop
*/
dvp2api dvpStatus dvpGetSoftTriggerLoopDescr(dvpHandle handle, dvpDoubleDescr *pSoftTriggerLoopDescr);


/**
*@brief ????????????????????
*@param[in] handle ??????
*@param[out] pSoftTriggerLoopState ?????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetSoftTriggerLoop
*@see dvpGetSoftTriggerLoop
*@see dvpGetSoftTriggerLoopDescr
*@see dvpSetSoftTriggerLoopState
*/
dvp2api dvpStatus dvpGetSoftTriggerLoopState(dvpHandle handle, bool *pSoftTriggerLoopState);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[in] SoftTriggerLoopState ?????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetSoftTriggerLoop
*@see dvpGetSoftTriggerLoop
*@see dvpGetSoftTriggerLoopDescr
*@see dvpGetSoftTriggerLoopState
*/
dvp2api dvpStatus dvpSetSoftTriggerLoopState(dvpHandle handle, bool SoftTriggerLoopState);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[out] pMultiFrames ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetMultiFramesState
*@see dvpGetMultiFramesState
*@see dvpGetMultiFramesDescr
*@see dvpSetMultiFrames
*@note ???????1????????????
*/
dvp2api dvpStatus dvpGetMultiFrames(dvpHandle handle, dvpUint64 *pMultiFrames);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[in] MultiFrames ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetMultiFramesState
*@see dvpGetMultiFramesState
*@see dvpGetMultiFramesDescr
*@see dvpGetMultiFrames
*@note ???????1????????????
*/
dvp2api dvpStatus dvpSetMultiFrames(dvpHandle handle, dvpUint64 MultiFrames);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[out] pMultiFramesDescr ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetMultiFramesState
*@see dvpGetMultiFramesState
*@see dvpSetMultiFrames
*@see dvpGetMultiFrames
*/
dvp2api dvpStatus dvpGetMultiFramesDescr(dvpHandle handle, dvpUint64Descr *pMultiFramesDescr);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@param[out] pMultiFramesState ????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetMultiFrames
*@see dvpGetMultiFrames
*@see dvpGetMultiFramesDescr
*@see dvpSetMultiFramesState
*/
dvp2api dvpStatus dvpGetMultiFramesState(dvpHandle handle, bool *pMultiFramesState);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@param[in] MultiFramesState ????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetMultiFrames
*@see dvpGetMultiFrames
*@see dvpGetMultiFramesDescr
*@see dvpGetMultiFramesState
*/
dvp2api dvpStatus dvpSetMultiFramesState(dvpHandle handle, bool MultiFramesState);


/**
*@brief ?????????????????????λ????
*@param[in] handle ??????
*@param[out] pStreamPackInterval ??????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpGetStreamPackIntervalDescr
*@see dvpSetStreamPackInterval
*@note ??????????????????
*/
dvp2api dvpStatus dvpGetStreamPackInterval(dvpHandle handle, dvpInt32 *pStreamPackInterval);


/**
*@brief ??????????????????????λ????
*@param[in] handle ??????
*@param[in] StreamPackInterval ??????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpGetStreamPackIntervalDescr
*@see dvpGetStreamPackInterval
*@note ??????????????????
*/
dvp2api dvpStatus dvpSetStreamPackInterval(dvpHandle handle, dvpInt32 StreamPackInterval);


/**
*@brief ???????????????????????
*@param[in] handle ??????
*@param[out] pStreamPackIntervalDescr ????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpSetStreamPackInterval
*@see dvpGetStreamPackInterval
*/
dvp2api dvpStatus dvpGetStreamPackIntervalDescr(dvpHandle handle, dvpIntDescr *pStreamPackIntervalDescr);


/**
*@brief ????????????????????λ?????
*@param[in] handle ??????
*@param[out] pStreamPackSize ?????????????????λ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpGetStreamPackSizeDescr
*@see dvpSetStreamPackSize
*@note ??????????????????????????Ч??
*@note ???????@link #dvpGetPixelRateSel ??????????@endlink
*/
dvp2api dvpStatus dvpGetStreamPackSize(dvpHandle handle, dvpInt32 *pStreamPackSize);


/**
*@brief ?????????????????????λ?????
*@param[in] handle ??????
*@param[in] StreamPackSize ?????????????????λ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpGetStreamPackSizeDescr
*@see dvpGetStreamPackSize
*@note ??????????????????????????Ч??
*@note ???????@link #dvpGetPixelRateSel ??????????@endlink
*/
dvp2api dvpStatus dvpSetStreamPackSize(dvpHandle handle, dvpInt32 StreamPackSize);


/**
*@brief ??????????????????????
*@param[in] handle ??????
*@param[out] pStreamPackSizeDescr ???????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpSetStreamPackSize
*@see dvpGetStreamPackSize
*/
dvp2api dvpStatus dvpGetStreamPackSizeDescr(dvpHandle handle, dvpIntDescr *pStreamPackSizeDescr);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[out] pAeTarget ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeOperation
*@see dvpGetAeTargetDescr
*@see dvpSetAeTarget
*@note ???????????????@link #dvpGetExposure ??????@endlink??@link #dvpGetAnalogGain ???????@endlink???????????????
*/
dvp2api dvpStatus dvpGetAeTarget(dvpHandle handle, dvpInt32 *pAeTarget);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@param[in] AeTarget ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeOperation
*@see dvpGetAeTargetDescr
*@see dvpGetAeTarget
*@note ???????????????@link #dvpGetExposure ??????@endlink??@link #dvpGetAnalogGain ???????@endlink???????????????
*/
dvp2api dvpStatus dvpSetAeTarget(dvpHandle handle, dvpInt32 AeTarget);


/**
*@brief ????????????????????????
*@param[in] handle ??????
*@param[out] pAeTargetDescr ?????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeOperation
*@see dvpSetAeTarget
*@see dvpGetAeTarget
*/
dvp2api dvpStatus dvpGetAeTargetDescr(dvpHandle handle, dvpIntDescr *pAeTargetDescr);


/**
*@brief ????????????
*@param[in] handle ??????
*@param[out] pAnalogGain ?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetExposure
*@see dvpGetAnalogGainDescr
*@see dvpSetAnalogGain
*@note ????·???????????????????????????????????
*/
dvp2api dvpStatus dvpGetAnalogGain(dvpHandle handle, float *pAnalogGain);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[in] AnalogGain ?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetExposure
*@see dvpGetAnalogGainDescr
*@see dvpGetAnalogGain
*@note ????·???????????????????????????????????
*/
dvp2api dvpStatus dvpSetAnalogGain(dvpHandle handle, float AnalogGain);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[out] pAnalogGainDescr ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetExposure
*@see dvpSetAnalogGain
*@see dvpGetAnalogGain
*/
dvp2api dvpStatus dvpGetAnalogGainDescr(dvpHandle handle, dvpFloatDescr *pAnalogGainDescr);


/**
*@brief ???????????????λ????
*@param[in] handle ??????
*@param[out] pExposure ????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAnalogGain
*@see dvpGetExposureDescr
*@see dvpSetExposure
*@note ????????????????????????
*/
dvp2api dvpStatus dvpGetExposure(dvpHandle handle, double *pExposure);


/**
*@brief ????????????????λ????
*@param[in] handle ??????
*@param[in] Exposure ????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAnalogGain
*@see dvpGetExposureDescr
*@see dvpGetExposure
*@note ????????????????????????
*/
dvp2api dvpStatus dvpSetExposure(dvpHandle handle, double Exposure);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[out] pExposureDescr ??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAnalogGain
*@see dvpSetExposure
*@see dvpGetExposure
*/
dvp2api dvpStatus dvpGetExposureDescr(dvpHandle handle, dvpDoubleDescr *pExposureDescr);


/**
*@brief ?????????????????????????λ????
*@param[in] handle ??????
*@param[out] pTriggerJitterFilter ??????????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetTriggerJitterFilterDescr
*@see dvpSetTriggerJitterFilter
*@note ??????????????????????????????????????????趨???????????????????????????
*/
dvp2api dvpStatus dvpGetTriggerJitterFilter(dvpHandle handle, double *pTriggerJitterFilter);


/**
*@brief ??????????????????????????λ????
*@param[in] handle ??????
*@param[in] TriggerJitterFilter ??????????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetTriggerJitterFilterDescr
*@see dvpGetTriggerJitterFilter
*@note ??????????????????????????????????????????趨???????????????????????????
*/
dvp2api dvpStatus dvpSetTriggerJitterFilter(dvpHandle handle, double TriggerJitterFilter);


/**
*@brief ???????????????????????????
*@param[in] handle ??????
*@param[out] pTriggerJitterFilterDescr ????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetTriggerJitterFilter
*@see dvpGetTriggerJitterFilter
*/
dvp2api dvpStatus dvpGetTriggerJitterFilterDescr(dvpHandle handle, dvpDoubleDescr *pTriggerJitterFilterDescr);


/**
*@brief ?????????????????λ????
*@param[in] handle ??????
*@param[out] pTriggerDelay ??????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetTriggerDelayDescr
*@see dvpSetTriggerDelay
*@note ????????Ч???????????????
*/
dvp2api dvpStatus dvpGetTriggerDelay(dvpHandle handle, double *pTriggerDelay);


/**
*@brief ?????????????????λ????
*@param[in] handle ??????
*@param[in] TriggerDelay ??????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetTriggerDelayDescr
*@see dvpGetTriggerDelay
*@note ????????Ч???????????????
*/
dvp2api dvpStatus dvpSetTriggerDelay(dvpHandle handle, double TriggerDelay);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@param[out] pTriggerDelayDescr ????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetTriggerDelay
*@see dvpGetTriggerDelay
*/
dvp2api dvpStatus dvpGetTriggerDelayDescr(dvpHandle handle, dvpDoubleDescr *pTriggerDelayDescr);


/**
*@brief ???Strobe??????????????λ????
*@param[in] handle ??????
*@param[out] pStrobeDelay Strobe??????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeDelayDescr
*@see dvpSetStrobeDelay
*@note ???????????
*/
dvp2api dvpStatus dvpGetStrobeDelay(dvpHandle handle, double *pStrobeDelay);


/**
*@brief ????Strobe??????????????λ????
*@param[in] handle ??????
*@param[in] StrobeDelay Strobe??????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeDelayDescr
*@see dvpGetStrobeDelay
*@note ???????????
*/
dvp2api dvpStatus dvpSetStrobeDelay(dvpHandle handle, double StrobeDelay);


/**
*@brief ???Strobe????????????????
*@param[in] handle ??????
*@param[out] pStrobeDelayDescr Strobe????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetStrobeDelay
*@see dvpGetStrobeDelay
*/
dvp2api dvpStatus dvpGetStrobeDelayDescr(dvpHandle handle, dvpDoubleDescr *pStrobeDelayDescr);


/**
*@brief ???Strobe????????????????λ????
*@param[in] handle ??????
*@param[out] pStrobeDuration Strobe????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeDurationDescr
*@see dvpSetStrobeDuration
*@note ????????????
*/
dvp2api dvpStatus dvpGetStrobeDuration(dvpHandle handle, double *pStrobeDuration);


/**
*@brief ????Strobe????????????????λ????
*@param[in] handle ??????
*@param[in] StrobeDuration Strobe????????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeDurationDescr
*@see dvpGetStrobeDuration
*@note ????????????
*/
dvp2api dvpStatus dvpSetStrobeDuration(dvpHandle handle, double StrobeDuration);


/**
*@brief ???Strobe??????????????????
*@param[in] handle ??????
*@param[out] pStrobeDurationDescr Strobe??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetStrobeDuration
*@see dvpGetStrobeDuration
*/
dvp2api dvpStatus dvpGetStrobeDurationDescr(dvpHandle handle, dvpDoubleDescr *pStrobeDurationDescr);


/**
*@brief ??????δ???????????
*@param[in] handle ??????
*@param[out] pFramesPerTrigger ???δ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetFramesPerTriggerDescr
*@see dvpSetFramesPerTrigger
*@note ???????????????????????
*/
dvp2api dvpStatus dvpGetFramesPerTrigger(dvpHandle handle, dvpInt32 *pFramesPerTrigger);


/**
*@brief ??????δ???????????
*@param[in] handle ??????
*@param[in] FramesPerTrigger ???δ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetFramesPerTriggerDescr
*@see dvpGetFramesPerTrigger
*@note ???????????????????????
*/
dvp2api dvpStatus dvpSetFramesPerTrigger(dvpHandle handle, dvpInt32 FramesPerTrigger);


/**
*@brief ??????δ????????????????????
*@param[in] handle ??????
*@param[out] pFramesPerTriggerDescr ???δ????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetFramesPerTrigger
*@see dvpGetFramesPerTrigger
*/
dvp2api dvpStatus dvpGetFramesPerTriggerDescr(dvpHandle handle, dvpIntDescr *pFramesPerTriggerDescr);


/**
*@brief ???????е????????????λ????
*@param[in] handle ??????
*@param[out] pTimerValue ????е????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetTimerValueDescr
*@see dvpSetTimerValue
*/
dvp2api dvpStatus dvpGetTimerValue(dvpHandle handle, double *pTimerValue);


/**
*@brief ????????е????????????λ????
*@param[in] handle ??????
*@param[in] TimerValue ????е????????????λ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetTimerValueDescr
*@see dvpGetTimerValue
*/
dvp2api dvpStatus dvpSetTimerValue(dvpHandle handle, double TimerValue);


/**
*@brief ???????е??????????????
*@param[in] handle ??????
*@param[out] pTimerValueDescr ????е??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetTimerValue
*@see dvpGetTimerValue
*/
dvp2api dvpStatus dvpGetTimerValueDescr(dvpHandle handle, dvpDoubleDescr *pTimerValueDescr);


/**
*@brief ?????????д?С
*@param[in] handle ??????
*@param[out] pBufferQueueSize ??????д?С
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetBufferQueueSizeDescr
*@see dvpSetBufferQueueSize
*@see dvpGetBufferConfig
*@warning ?????????????????????????????????????????
*@warning ???????????@link #dvpStart ?????????@endlink????ú?
*/
dvp2api dvpStatus dvpGetBufferQueueSize(dvpHandle handle, dvpInt32 *pBufferQueueSize);


/**
*@brief ?????????д?С
*@param[in] handle ??????
*@param[in] BufferQueueSize ??????д?С
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetBufferQueueSizeDescr
*@see dvpGetBufferQueueSize
*@see dvpGetBufferConfig
*@warning ?????????????????????????????????????????
*@warning ???????????@link #dvpStart ?????????@endlink????ú?
*/
dvp2api dvpStatus dvpSetBufferQueueSize(dvpHandle handle, dvpInt32 BufferQueueSize);


/**
*@brief ?????????д?С?????????
*@param[in] handle ??????
*@param[out] pBufferQueueSizeDescr ??????д?С?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetBufferQueueSize
*@see dvpGetBufferQueueSize
*/
dvp2api dvpStatus dvpGetBufferQueueSizeDescr(dvpHandle handle, dvpIntDescr *pBufferQueueSizeDescr);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[out] pLineRate ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
* @ingroup DVP_LINESCAN
*@see dvpGetLineRateDescr
*@see dvpSetLineRate
*/
dvp2api dvpStatus dvpGetLineRate(dvpHandle handle, double *pLineRate);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[in] LineRate ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
* @ingroup DVP_LINESCAN
*@see dvpGetLineRateDescr
*@see dvpGetLineRate
*/
dvp2api dvpStatus dvpSetLineRate(dvpHandle handle, double LineRate);


/**
*@brief ??????????????????????
*@param[in] handle ??????
*@param[out] pLineRateDescr ???????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
* @ingroup DVP_LINESCAN
*@see dvpSetLineRate
*@see dvpGetLineRate
*/
dvp2api dvpStatus dvpGetLineRateDescr(dvpHandle handle, dvpDoubleDescr *pLineRateDescr);


/**
*@brief ????????????
*@param[in] handle ??????
*@param[out] pTriggerSource ?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpSetTriggerSource
*/
dvp2api dvpStatus dvpGetTriggerSource(dvpHandle handle, dvpTriggerSource *pTriggerSource);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[in] TriggerSource ?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetTriggerSource
*/
dvp2api dvpStatus dvpSetTriggerSource(dvpHandle handle, dvpTriggerSource TriggerSource);


/**
*@brief ???LUT????
*@param[in] handle ??????
*@param[out] pCurveLut LUT????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpSetCurveLut
*@note ??????????ê???????????????????????
*/
dvp2api dvpStatus dvpGetCurveLut(dvpHandle handle, dvpCurveLut *pCurveLut);


/**
*@brief ????LUT????
*@param[in] handle ??????
*@param[in] CurveLut LUT????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetCurveLut
*@note ??????????ê???????????????????????
*/
dvp2api dvpStatus dvpSetCurveLut(dvpHandle handle, dvpCurveLut CurveLut);


/**
*@brief ??????У??????
*@param[in] handle ??????
*@param[out] pColorCorrection ???У??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@see dvpSetColorCorrection
*@note ???У???????????????????????????Ч????????????
*/
dvp2api dvpStatus dvpGetColorCorrection(dvpHandle handle, dvpColorCorrection *pColorCorrection);


/**
*@brief ???????У??????
*@param[in] handle ??????
*@param[in] ColorCorrection ???У??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@see dvpGetColorCorrection
*@note ???У???????????????????????????Ч????????????
*/
dvp2api dvpStatus dvpSetColorCorrection(dvpHandle handle, dvpColorCorrection ColorCorrection);


/**
*@brief ??????????
*@param[in] handle ??????
*@param[out] pStreamState ???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpStart
*@see dvpStop
*@see dvpSetStreamState
*/
dvp2api dvpStatus dvpGetStreamState(dvpHandle handle, dvpStreamState *pStreamState);


/**
*@brief ???????????
*@param[in] handle ??????
*@param[in] StreamState ???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpStart
*@see dvpStop
*@see dvpGetStreamState
*/
dvp2api dvpStatus dvpSetStreamState(dvpHandle handle, dvpStreamState StreamState);


/**
*@brief ?????????????ISP???????
*@param[in] handle ??????
*@param[out] pHardwareIspState ??????????ISP???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpGetFunctionInfo
*@see dvpSetHardwareIspState
*@note ???ISP??????????????????
*/
dvp2api dvpStatus dvpGetHardwareIspState(dvpHandle handle, bool *pHardwareIspState);


/**
*@brief ??????????????ISP???????
*@param[in] handle ??????
*@param[in] HardwareIspState ??????????ISP???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@see dvpGetFunctionInfo
*@see dvpGetHardwareIspState
*@note ???ISP??????????????????
*/
dvp2api dvpStatus dvpSetHardwareIspState(dvpHandle handle, bool HardwareIspState);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pTriggerState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetFunctionInfo
*@see dvpSetTriggerState
*@note ???????????????????????л?
*/
dvp2api dvpStatus dvpGetTriggerState(dvpHandle handle, bool *pTriggerState);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] TriggerState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetFunctionInfo
*@see dvpGetTriggerState
*@note ???????????????????????л?
*/
dvp2api dvpStatus dvpSetTriggerState(dvpHandle handle, bool TriggerState);


/**
*@brief ????????????
*@param[in] handle ??????
*@param[out] pMonoState ?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpSetMonoState
*@note ??????????????YUV?任??????????Y??????
*/
dvp2api dvpStatus dvpGetMonoState(dvpHandle handle, bool *pMonoState);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[in] MonoState ?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetMonoState
*@note ??????????????YUV?任??????????Y??????
*/
dvp2api dvpStatus dvpSetMonoState(dvpHandle handle, bool MonoState);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[out] pInverseState ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpSetInverseState
*@note ?????????????????Ч??
*/
dvp2api dvpStatus dvpGetInverseState(dvpHandle handle, bool *pInverseState);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[in] InverseState ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetInverseState
*@note ?????????????????Ч??
*/
dvp2api dvpStatus dvpSetInverseState(dvpHandle handle, bool InverseState);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[out] pFlipHorizontalState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetFlipVerticalState
*@see dvpGetRotateOpposite
*@see dvpSetFlipHorizontalState
*/
dvp2api dvpStatus dvpGetFlipHorizontalState(dvpHandle handle, bool *pFlipHorizontalState);


/**
*@brief ???ú???????????
*@param[in] handle ??????
*@param[in] FlipHorizontalState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetFlipVerticalState
*@see dvpGetRotateOpposite
*@see dvpGetFlipHorizontalState
*/
dvp2api dvpStatus dvpSetFlipHorizontalState(dvpHandle handle, bool FlipHorizontalState);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[out] pFlipVerticalState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetFlipHorizontalState
*@see dvpGetRotateOpposite
*@see dvpSetFlipVerticalState
*/
dvp2api dvpStatus dvpGetFlipVerticalState(dvpHandle handle, bool *pFlipVerticalState);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] FlipVerticalState ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetFlipHorizontalState
*@see dvpGetRotateOpposite
*@see dvpGetFlipVerticalState
*/
dvp2api dvpStatus dvpSetFlipVerticalState(dvpHandle handle, bool FlipVerticalState);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[out] pFlatFieldState ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION 
*@see dvpCreateFlatFieldInfo
*@see dvpSetFlatFieldState
*@note ???????????????????????????Ч?
*/
dvp2api dvpStatus dvpGetFlatFieldState(dvpHandle handle, bool *pFlatFieldState);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[in] FlatFieldState ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION 
*@see dvpCreateFlatFieldInfo
*@see dvpGetFlatFieldState
*@note ???????????????????????????Ч?
*/
dvp2api dvpStatus dvpSetFlatFieldState(dvpHandle handle, bool FlatFieldState);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pDefectFixState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@see dvpCreateDefectFixInfo
*@see dvpSetAutoDefectFixState
*@see dvpSetDefectFixState
*/
dvp2api dvpStatus dvpGetDefectFixState(dvpHandle handle, bool *pDefectFixState);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[in] DefectFixState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@see dvpCreateDefectFixInfo
*@see dvpSetAutoDefectFixState
*@see dvpGetDefectFixState
*/
dvp2api dvpStatus dvpSetDefectFixState(dvpHandle handle, bool DefectFixState);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@param[out] pAutoDefectFixState ????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@see dvpCreateDefectFixInfo
*@see dvpSetDefectFixState
*@see dvpSetAutoDefectFixState
*@note true ??????false ????
*/
dvp2api dvpStatus dvpGetAutoDefectFixState(dvpHandle handle, bool *pAutoDefectFixState);


/**
*@brief ????????????????????
*@param[in] handle ??????
*@param[in] AutoDefectFixState ????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_CORRECTION
*@see dvpCreateDefectFixInfo
*@see dvpSetDefectFixState
*@see dvpGetAutoDefectFixState
*@note true ??????false ????
*/
dvp2api dvpStatus dvpSetAutoDefectFixState(dvpHandle handle, bool AutoDefectFixState);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[out] pRotateState ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetRotateOpposite
*@see dvpSetRotateState
*/
dvp2api dvpStatus dvpGetRotateState(dvpHandle handle, bool *pRotateState);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[in] RotateState ???????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetRotateOpposite
*@see dvpGetRotateState
*/
dvp2api dvpStatus dvpSetRotateState(dvpHandle handle, bool RotateState);


/**
*@brief ????????????????
*@see dvpGetRotateState
*@param[in] handle ??????
*@param[out] pRotateOpposite ?????????????
*@see dvpGetRotateState
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpSetRotateOpposite
*@note ????true?????????false??90??
*/
dvp2api dvpStatus dvpGetRotateOpposite(dvpHandle handle, bool *pRotateOpposite);


/**
*@brief ?????????????????
*@see dvpGetRotateState
*@param[in] handle ??????
*@param[in] RotateOpposite ?????????????
*@see dvpGetRotateState
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ENHANCE
*@see dvpGetRotateOpposite
*@note ????true?????????false??90??
*/
dvp2api dvpStatus dvpSetRotateOpposite(dvpHandle handle, bool RotateOpposite);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pCoolerState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetTemperatureInfo
*@see dvpSetCoolerState
*@note ????????????
*/
dvp2api dvpStatus dvpGetCoolerState(dvpHandle handle, bool *pCoolerState);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[in] CoolerState ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetTemperatureInfo
*@see dvpGetCoolerState
*@note ????????????
*/
dvp2api dvpStatus dvpSetCoolerState(dvpHandle handle, bool CoolerState);


/**
*@brief ????????????????????????????????
*@param[in] handle ??????
*@param[out] pAeRoi ?????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpSetAeOperation
*@see dvpSetAeRoi
*@note ?????????????????????
*/
dvp2api dvpStatus dvpGetAeRoi(dvpHandle handle, dvpRegion *pAeRoi);


/**
*@brief ?????????????????????????????????
*@param[in] handle ??????
*@param[in] AeRoi ?????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpSetAeOperation
*@see dvpGetAeRoi
*@note ?????????????????????
*/
dvp2api dvpStatus dvpSetAeRoi(dvpHandle handle, dvpRegion AeRoi);


/**
*@brief ??????????????????????????????????
*@param[in] handle ??????
*@param[out] pAwbRoi ???????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetAwbOperation
*@see dvpSetAwbRoi
*@note ??????????????????????
*/
dvp2api dvpStatus dvpGetAwbRoi(dvpHandle handle, dvpRegion *pAwbRoi);


/**
*@brief ???????????????????????????????????
*@param[in] handle ??????
*@param[in] AwbRoi ???????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetAwbOperation
*@see dvpGetAwbRoi
*@note ??????????????????????
*/
dvp2api dvpStatus dvpSetAwbRoi(dvpHandle handle, dvpRegion AwbRoi);


/**
*@brief ???????????
*@param[in] handle ??????
*@param[out] pAeMode ????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAwbRoi
*@see dvpGetAwbOperation
*@see dvpSetAeMode
*@note ?????????????????
*/
dvp2api dvpStatus dvpGetAeMode(dvpHandle handle, dvpAeMode *pAeMode);


/**
*@brief ????????????
*@param[in] handle ??????
*@param[in] AeMode ????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAwbRoi
*@see dvpGetAwbOperation
*@see dvpGetAeMode
*@note ?????????????????
*/
dvp2api dvpStatus dvpSetAeMode(dvpHandle handle, dvpAeMode AeMode);


/**
*@brief ??????????
*@param[in] handle ??????
*@param[out] pAntiFlick ???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeRoi
*@see dvpGetAeOperation
*@see dvpSetAntiFlick
*@note ?????Щ??????????????????????????
*/
dvp2api dvpStatus dvpGetAntiFlick(dvpHandle handle, dvpAntiFlick *pAntiFlick);


/**
*@brief ??????????
*@param[in] handle ??????
*@param[in] AntiFlick ???????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeRoi
*@see dvpGetAeOperation
*@see dvpGetAntiFlick
*@note ?????Щ??????????????????????????
*/
dvp2api dvpStatus dvpSetAntiFlick(dvpHandle handle, dvpAntiFlick AntiFlick);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pAeOperation ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeConfig
*@see dvpGetAeTarget
*@see dvpGetAeMode
*@see dvpSetAeOperation
*@note ??????????????л?
*/
dvp2api dvpStatus dvpGetAeOperation(dvpHandle handle, dvpAeOperation *pAeOperation);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[in] AeOperation ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeConfig
*@see dvpGetAeTarget
*@see dvpGetAeMode
*@see dvpGetAeOperation
*@note ??????????????л?
*/
dvp2api dvpStatus dvpSetAeOperation(dvpHandle handle, dvpAeOperation AeOperation);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[out] pAwbOperation ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetAwbOperation
*@note ????а???????????????@link #dvpSetRgbGain ????RGB????@endlink?1.0??????@link dvpSetColorTemperatureState ???????Ч??@endlink????????????????
*/
dvp2api dvpStatus dvpGetAwbOperation(dvpHandle handle, dvpAwbOperation *pAwbOperation);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@param[in] AwbOperation ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpGetAwbOperation
*@note ????а???????????????@link #dvpSetRgbGain ????RGB????@endlink?1.0??????@link dvpSetColorTemperatureState ???????Ч??@endlink????????????????
*/
dvp2api dvpStatus dvpSetAwbOperation(dvpHandle handle, dvpAwbOperation AwbOperation);


/**
*@brief ???Strobe??????????????????
*@param[in] handle ??????
*@param[out] pStrobeDriver Strobe??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeOutputType
*@see dvpSetStrobeDriver
*/
dvp2api dvpStatus dvpGetStrobeDriver(dvpHandle handle, dvpStrobeDriver *pStrobeDriver);


/**
*@brief ????Strobe??????????????????
*@param[in] handle ??????
*@param[in] StrobeDriver Strobe??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeOutputType
*@see dvpGetStrobeDriver
*/
dvp2api dvpStatus dvpSetStrobeDriver(dvpHandle handle, dvpStrobeDriver StrobeDriver);


/**
*@brief ???Strobe???????????????
*@param[in] handle ??????
*@param[out] pStrobeOutputType Strobe???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeDriver
*@see dvpSetStrobeOutputType
*/
dvp2api dvpStatus dvpGetStrobeOutputType(dvpHandle handle, dvpStrobeOutputType *pStrobeOutputType);


/**
*@brief ????Strobe???????????????
*@param[in] handle ??????
*@param[in] StrobeOutputType Strobe???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetStrobeDriver
*@see dvpGetStrobeOutputType
*/
dvp2api dvpStatus dvpSetStrobeOutputType(dvpHandle handle, dvpStrobeOutputType StrobeOutputType);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[out] pTriggerInputType ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetTriggerLineMode
*@see dvpSetTriggerInputType
*/
dvp2api dvpStatus dvpGetTriggerInputType(dvpHandle handle, dvpTriggerInputType *pTriggerInputType);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[in] TriggerInputType ???????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_TRIGGER
*@see dvpGetTriggerLineMode
*@see dvpGetTriggerInputType
*/
dvp2api dvpStatus dvpSetTriggerInputType(dvpHandle handle, dvpTriggerInputType TriggerInputType);


/**
*@brief ?????????
*@param[in] handle ??????
*@param[out] pSourceFormat ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@see dvpSetSourceFormatSel
*@see dvpSetSourceFormat
*@note ??????????????????????
*/
dvp2api dvpStatus dvpGetSourceFormat(dvpHandle handle, dvpStreamFormat *pSourceFormat);


/**
*@brief ??????????
*@param[in] handle ??????
*@param[in] SourceFormat ??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@see dvpSetSourceFormatSel
*@see dvpGetSourceFormat
*@note ??????????????????????
*/
dvp2api dvpStatus dvpSetSourceFormat(dvpHandle handle, dvpStreamFormat SourceFormat);


/**
*@brief ???????????
*@param[in] handle ??????
*@param[out] pTargetFormat ????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@see dvpSetTargetFormatSel
*@see dvpSetTargetFormat
*@note ?????????????????????????
*/
dvp2api dvpStatus dvpGetTargetFormat(dvpHandle handle, dvpStreamFormat *pTargetFormat);


/**
*@brief ????????????
*@param[in] handle ??????
*@param[in] TargetFormat ????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@see dvpSetTargetFormatSel
*@see dvpGetTargetFormat
*@note ?????????????????????????
*/
dvp2api dvpStatus dvpSetTargetFormat(dvpHandle handle, dvpStreamFormat TargetFormat);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[out] pUserColorMatrix ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpSetUserColorMatrix
*@note MAT[0][0] + MAT[1][0] + MAT[2][0] ????? 1.0
*@note MAT[0][1] + MAT[1][1] + MAT[2][1] ????? 1.0
*@note MAT[0][2] + MAT[1][2] + MAT[2][2] ????? 1.0
*@note ??????? [B0.G0.R0]
*@note ?????? [B1.G1.R1]
*@note B1 = B0*MAT[0][0] + G0*MAT[1][0] + R0*MAT[2][0] + MAT[3][0]
*@note G1 = B0*MAT[0][1] + G0*MAT[1][1] + R0*MAT[2][1] + MAT[3][1]
*@note R1 = B0*MAT[0][2] + G0*MAT[1][2] + R0*MAT[2][2] + MAT[3][2]
*/
dvp2api dvpStatus dvpGetUserColorMatrix(dvpHandle handle, dvpColorMatrix *pUserColorMatrix);


/**
*@brief ??????????????
*@param[in] handle ??????
*@param[in] UserColorMatrix ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpGetUserColorMatrix
*@note MAT[0][0] + MAT[1][0] + MAT[2][0] ????? 1.0
*@note MAT[0][1] + MAT[1][1] + MAT[2][1] ????? 1.0
*@note MAT[0][2] + MAT[1][2] + MAT[2][2] ????? 1.0
*@note ??????? [B0.G0.R0]
*@note ?????? [B1.G1.R1]
*@note B1 = B0*MAT[0][0] + G0*MAT[1][0] + R0*MAT[2][0] + MAT[3][0]
*@note G1 = B0*MAT[0][1] + G0*MAT[1][1] + R0*MAT[2][1] + MAT[3][1]
*@note R1 = B0*MAT[0][2] + G0*MAT[1][2] + R0*MAT[2][2] + MAT[3][2]
*/
dvp2api dvpStatus dvpSetUserColorMatrix(dvpHandle handle, dvpColorMatrix UserColorMatrix);


/**
*@brief ?????????????? ????λ?????
*@param[in] handle ??????
*@param[out] pLinkTimeout ??????????? ????λ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetLinkTimeout
*@note ?????????????????????????????
*/
dvp2api dvpStatus dvpGetLinkTimeout(dvpHandle handle, dvpUint32 *pLinkTimeout);


/**
*@brief ??????????????? ????λ?????
*@param[in] handle ??????
*@param[in] LinkTimeout ??????????? ????λ?????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetLinkTimeout
*@note ?????????????????????????????
*/
dvp2api dvpStatus dvpSetLinkTimeout(dvpHandle handle, dvpUint32 LinkTimeout);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[out] pAeConfig ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeOperation
*@see dvpGetAeTarget
*@see dvpSetAeConfig
*@note ?????????????????????????????????
*/
dvp2api dvpStatus dvpGetAeConfig(dvpHandle handle, dvpAeConfig *pAeConfig);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[in] AeConfig ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@see dvpGetAeOperation
*@see dvpGetAeTarget
*@see dvpGetAeConfig
*@note ?????????????????????????????????
*/
dvp2api dvpStatus dvpSetAeConfig(dvpHandle handle, dvpAeConfig AeConfig);


/**
*@brief ???????????
*@param[in] handle ??????
*@param[out] pBufferConfig ????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpSetBufferConfig
*@note ?????????????????????????ó???
*@warning ???????????@link #dvpStart ?????????@endlink????ú?
*/
dvp2api dvpStatus dvpGetBufferConfig(dvpHandle handle, dvpBufferConfig *pBufferConfig);


/**
*@brief ???????????
*@param[in] handle ??????
*@param[in] BufferConfig ????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@see dvpGetBufferConfig
*@note ?????????????????????????ó???
*@warning ???????????@link #dvpStart ?????????@endlink????ú?
*/
dvp2api dvpStatus dvpSetBufferConfig(dvpHandle handle, dvpBufferConfig BufferConfig);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[out] pLineTriggerConfig ??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
* @ingroup DVP_LINESCAN
*@see dvpSetLineTriggerConfig
* @note ??????????????????
* @warning ???????????@link #dvpStart ?????????@endlink????ú?
*/
dvp2api dvpStatus dvpGetLineTriggerConfig(dvpHandle handle, dvpLineTriggerConfig *pLineTriggerConfig);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[in] LineTriggerConfig ??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
* @ingroup DVP_LINESCAN
*@see dvpGetLineTriggerConfig
* @note ??????????????????
* @warning ???????????@link #dvpStart ?????????@endlink????ú?
*/
dvp2api dvpStatus dvpSetLineTriggerConfig(dvpHandle handle, dvpLineTriggerConfig LineTriggerConfig);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[out] pUserSet ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP2_API_CONFIG
*@see dvpGetFunctionInfo
*@see dvpSetUserSet
*@note ?????????????????????????洢???????
*/
dvp2api dvpStatus dvpGetUserSet(dvpHandle handle, dvpUserSet *pUserSet);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[in] UserSet ??????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP2_API_CONFIG
*@see dvpGetFunctionInfo
*@see dvpGetUserSet
*@note ?????????????????????????洢???????
*/
dvp2api dvpStatus dvpSetUserSet(dvpHandle handle, dvpUserSet UserSet);


/**
*@brief ???????IO??????
*@param[in] handle ??????
*@param[in] inputIo ????IO
*@param[out] pInputIoLevel ????IO??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@deprecated
*@ingroup DVP_LINE
*/
dvp2api dvpStatus dvpGetInputIoLevel(dvpHandle handle, dvpInputIo inputIo, bool *pInputIoLevel);


/**
*@brief ???@link dvpLineMode::LINE_MODE_OUTPUT ???????@endlink ????
*@param[in] handle ??????
*@param[in] line ????
*@param[out] pLineLevel @link dvpLineMode::LINE_MODE_OUTPUT ???????@endlink ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpSetLineLevel
*/
dvp2api dvpStatus dvpGetLineLevel(dvpHandle handle, dvpLine line, bool *pLineLevel);


/**
*@brief ????@link dvpLineMode::LINE_MODE_OUTPUT ???????@endlink ????
*@param[in] handle ??????
*@param[in] line ????
*@param[in] LineLevel @link dvpLineMode::LINE_MODE_OUTPUT ???????@endlink ????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpGetLineLevel
*/
dvp2api dvpStatus dvpSetLineLevel(dvpHandle handle, dvpLine line, bool LineLevel);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] line ????
*@param[out] pLineInverter ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpSetLineInverter
*/
dvp2api dvpStatus dvpGetLineInverter(dvpHandle handle, dvpLine line, bool *pLineInverter);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[in] line ????
*@param[in] LineInverter ?????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpGetLineInverter
*/
dvp2api dvpStatus dvpSetLineInverter(dvpHandle handle, dvpLine line, bool LineInverter);


/**
*@brief ????????I/O??
*@param[in] handle ??????
*@param[in] line ????
*@param[out] pLineMode ?????I/O??
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpSetLineMode
*/
dvp2api dvpStatus dvpGetLineMode(dvpHandle handle, dvpLine line, dvpLineMode *pLineMode);


/**
*@brief ?????????I/O??
*@param[in] handle ??????
*@param[in] line ????
*@param[in] LineMode ?????I/O??
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpGetLineMode
*/
dvp2api dvpStatus dvpSetLineMode(dvpHandle handle, dvpLine line, dvpLineMode LineMode);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[in] line ????
*@param[out] pLineSource ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpSetLineSource
*/
dvp2api dvpStatus dvpGetLineSource(dvpHandle handle, dvpLine line, dvpLineSource *pLineSource);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] line ????
*@param[in] LineSource ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*@see dvpGetLineSource
*/
dvp2api dvpStatus dvpSetLineSource(dvpHandle handle, dvpLine line, dvpLineSource LineSource);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[in] line ????
*@param[out] pLineStatus ????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_LINE
*/
dvp2api dvpStatus dvpGetLineStatus(dvpHandle handle, dvpLine line, bool *pLineStatus);


/**
*@brief ??????IO??????
*@param[in] handle ??????
*@param[in] outputIo ???IO
*@param[out] pOutputIoLevel ???IO??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@deprecated
*@ingroup DVP_LINE
*@see dvpSetOutputIoLevel
*/
dvp2api dvpStatus dvpGetOutputIoLevel(dvpHandle handle, dvpOutputIo outputIo, bool *pOutputIoLevel);


/**
*@brief ???????IO??????
*@param[in] handle ??????
*@param[in] outputIo ???IO
*@param[in] OutputIoLevel ???IO??????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@deprecated
*@ingroup DVP_LINE
*@see dvpGetOutputIoLevel
*/
dvp2api dvpStatus dvpSetOutputIoLevel(dvpHandle handle, dvpOutputIo outputIo, bool OutputIoLevel);


/**
*@brief ??????IO?????????
*@param[in] handle ??????
*@param[in] outputIo ???IO
*@param[out] pOutputIoFunction ???IO?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@deprecated
*@ingroup DVP_LINE
*@see dvpSetOutputIoFunction
*/
dvp2api dvpStatus dvpGetOutputIoFunction(dvpHandle handle, dvpOutputIo outputIo, dvpOutputIoFunction *pOutputIoFunction);


/**
*@brief ???????IO?????????
*@param[in] handle ??????
*@param[in] outputIo ???IO
*@param[in] OutputIoFunction ???IO?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@deprecated
*@ingroup DVP_LINE
*@see dvpGetOutputIoFunction
*/
dvp2api dvpStatus dvpSetOutputIoFunction(dvpHandle handle, dvpOutputIo outputIo, dvpOutputIoFunction OutputIoFunction);


/**
*@brief ???????IO?????????
*@param[in] handle ??????
*@param[in] inputIo ????IO
*@param[out] pInputIoFunction ????IO?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@deprecated
*@ingroup DVP_LINE
*@see dvpSetInputIoFunction
*/
dvp2api dvpStatus dvpGetInputIoFunction(dvpHandle handle, dvpInputIo inputIo, dvpInputIoFunction *pInputIoFunction);


/**
*@brief ????????IO?????????
*@param[in] handle ??????
*@param[in] inputIo ????IO
*@param[in] InputIoFunction ????IO?????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@deprecated
*@ingroup DVP_LINE
*@see dvpGetInputIoFunction
*/
dvp2api dvpStatus dvpSetInputIoFunction(dvpHandle handle, dvpInputIo inputIo, dvpInputIoFunction InputIoFunction);


/**
*@brief ???????????????????????
*@param[in] handle ??????
*@param[out] pStreamFlowCtrlSel ????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@note ??????????????
*@see dvpGetStreamFlowCtrlSelDescr
*@see dvpGetStreamFlowCtrlSelDetail
*@see dvpSetStreamFlowCtrlSel
*/
dvp2api dvpStatus dvpGetStreamFlowCtrlSel(dvpHandle handle, dvpUint32 *pStreamFlowCtrlSel);


/**
*@brief ???????????????????????
*@param[in] handle ??????
*@param[in] StreamFlowCtrlSel ????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@note ??????????????
*@see dvpGetStreamFlowCtrlSelDescr
*@see dvpGetStreamFlowCtrlSelDetail
*@see dvpGetStreamFlowCtrlSel
*/
dvp2api dvpStatus dvpSetStreamFlowCtrlSel(dvpHandle handle, dvpUint32 StreamFlowCtrlSel);


/**
*@brief ????????????????????????????
*@param[in] handle ??????
*@param[out] pStreamFlowCtrlSelDescr ?????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@note ??????????????
*@see dvpGetStreamFlowCtrlSel
*@see dvpGetStreamFlowCtrlSelDetail
*/
dvp2api dvpStatus dvpGetStreamFlowCtrlSelDescr(dvpHandle handle, dvpSelectionDescr *pStreamFlowCtrlSelDescr);


/**
*@brief ?????????????????????????????????
*@param[in] handle ??????
*@param[in] StreamFlowCtrlSel ???????????????
*@param[out] pStreamFlowCtrlSelDetail ??????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_ADVANCED
*@note ??????????????
*@see dvpGetStreamFlowCtrlSel
*@see dvpGetStreamFlowCtrlSelDescr
*/
dvp2api dvpStatus dvpGetStreamFlowCtrlSelDetail(dvpHandle handle, dvpUint32 StreamFlowCtrlSel, dvpSelection *pStreamFlowCtrlSelDetail);


/**
*@brief ????????????????????
*@param[in] handle ??????
*@param[out] pColorSolutionSel ?????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpGetGamma
*@note ?????????Ч?????????????????????????
*@see dvpGetColorSolutionSelDescr
*@see dvpGetColorSolutionSelDetail
*@see dvpSetColorSolutionSel
*/
dvp2api dvpStatus dvpGetColorSolutionSel(dvpHandle handle, dvpUint32 *pColorSolutionSel);


/**
*@brief ????????????????????
*@param[in] handle ??????
*@param[in] ColorSolutionSel ?????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpGetGamma
*@note ?????????Ч?????????????????????????
*@see dvpGetColorSolutionSelDescr
*@see dvpGetColorSolutionSelDetail
*@see dvpGetColorSolutionSel
*/
dvp2api dvpStatus dvpSetColorSolutionSel(dvpHandle handle, dvpUint32 ColorSolutionSel);


/**
*@brief ?????????????????????????
*@param[in] handle ??????
*@param[out] pColorSolutionSelDescr ??????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpGetGamma
*@note ?????????Ч?????????????????????????
*@see dvpGetColorSolutionSel
*@see dvpGetColorSolutionSelDetail
*/
dvp2api dvpStatus dvpGetColorSolutionSelDescr(dvpHandle handle, dvpSelectionDescr *pColorSolutionSelDescr);


/**
*@brief ??????????????????????????????
*@param[in] handle ??????
*@param[in] ColorSolutionSel ????????????
*@param[out] pColorSolutionSelDetail ???????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@see dvpGetGamma
*@note ?????????Ч?????????????????????????
*@see dvpGetColorSolutionSel
*@see dvpGetColorSolutionSelDescr
*/
dvp2api dvpStatus dvpGetColorSolutionSelDetail(dvpHandle handle, dvpUint32 ColorSolutionSel, dvpSelection *pColorSolutionSelDetail);


/**
*@brief ??????Bayer?RGB??????????????
*@param[in] handle ??????
*@param[out] pBayerDecodeSel ???Bayer?RGB??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@note ???????????????Ч??
*@see dvpGetBayerDecodeSelDescr
*@see dvpGetBayerDecodeSelDetail
*@see dvpSetBayerDecodeSel
*/
dvp2api dvpStatus dvpGetBayerDecodeSel(dvpHandle handle, dvpUint32 *pBayerDecodeSel);


/**
*@brief ??????Bayer?RGB??????????????
*@param[in] handle ??????
*@param[in] BayerDecodeSel ???Bayer?RGB??????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@note ???????????????Ч??
*@see dvpGetBayerDecodeSelDescr
*@see dvpGetBayerDecodeSelDetail
*@see dvpGetBayerDecodeSel
*/
dvp2api dvpStatus dvpSetBayerDecodeSel(dvpHandle handle, dvpUint32 BayerDecodeSel);


/**
*@brief ???Bayer?RGB??????????????????????
*@param[in] handle ??????
*@param[out] pBayerDecodeSelDescr Bayer?RGB??????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@note ???????????????Ч??
*@see dvpGetBayerDecodeSel
*@see dvpGetBayerDecodeSelDetail
*/
dvp2api dvpStatus dvpGetBayerDecodeSelDescr(dvpHandle handle, dvpSelectionDescr *pBayerDecodeSelDescr);


/**
*@brief ??????Bayer?RGB????????????????????????
*@param[in] handle ??????
*@param[in] BayerDecodeSel Bayer?RGB????????????
*@param[out] pBayerDecodeSelDetail ???Bayer?RGB????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_COLOR
*@note ???????????????Ч??
*@see dvpGetBayerDecodeSel
*@see dvpGetBayerDecodeSelDescr
*/
dvp2api dvpStatus dvpGetBayerDecodeSelDetail(dvpHandle handle, dvpUint32 BayerDecodeSel, dvpSelection *pBayerDecodeSelDetail);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[out] pSourceFormatSel ??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetSourceFormatSelDescr
*@see dvpGetSourceFormatSelDetail
*@see dvpSetSourceFormatSel
*/
dvp2api dvpStatus dvpGetSourceFormatSel(dvpHandle handle, dvpUint32 *pSourceFormatSel);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[in] SourceFormatSel ??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetSourceFormatSelDescr
*@see dvpGetSourceFormatSelDetail
*@see dvpGetSourceFormatSel
*/
dvp2api dvpStatus dvpSetSourceFormatSel(dvpHandle handle, dvpUint32 SourceFormatSel);


/**
*@brief ??????????????????????????
*@param[in] handle ??????
*@param[out] pSourceFormatSelDescr ???????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetSourceFormatSel
*@see dvpGetSourceFormatSelDetail
*/
dvp2api dvpStatus dvpGetSourceFormatSelDescr(dvpHandle handle, dvpSelectionDescr *pSourceFormatSelDescr);


/**
*@brief ???????????????????????????????
*@param[in] handle ??????
*@param[in] SourceFormatSel ?????????????
*@param[out] pSourceFormatSelDetail ????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetSourceFormatSel
*@see dvpGetSourceFormatSelDescr
*/
dvp2api dvpStatus dvpGetSourceFormatSelDetail(dvpHandle handle, dvpUint32 SourceFormatSel, dvpFormatSelection *pSourceFormatSelDetail);


/**
*@brief ??????????????????????
*@param[in] handle ??????
*@param[out] pTargetFormatSel ???????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetTargetFormatSelDescr
*@see dvpGetTargetFormatSelDetail
*@see dvpSetTargetFormatSel
*/
dvp2api dvpStatus dvpGetTargetFormatSel(dvpHandle handle, dvpUint32 *pTargetFormatSel);


/**
*@brief ??????????????????????
*@param[in] handle ??????
*@param[in] TargetFormatSel ???????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetTargetFormatSelDescr
*@see dvpGetTargetFormatSelDetail
*@see dvpGetTargetFormatSel
*/
dvp2api dvpStatus dvpSetTargetFormatSel(dvpHandle handle, dvpUint32 TargetFormatSel);


/**
*@brief ???????????????????????????
*@param[in] handle ??????
*@param[out] pTargetFormatSelDescr ????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetTargetFormatSel
*@see dvpGetTargetFormatSelDetail
*/
dvp2api dvpStatus dvpGetTargetFormatSelDescr(dvpHandle handle, dvpSelectionDescr *pTargetFormatSelDescr);


/**
*@brief ????????????????????????????????
*@param[in] handle ??????
*@param[in] TargetFormatSel ??????????????
*@param[out] pTargetFormatSelDetail ?????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_FORMAT
*@note ?????@link dvpStreamFormat @endlink???
*@see dvpGetTargetFormatSel
*@see dvpGetTargetFormatSelDescr
*/
dvp2api dvpStatus dvpGetTargetFormatSelDetail(dvpHandle handle, dvpUint32 TargetFormatSel, dvpFormatSelection *pTargetFormatSelDetail);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[out] pResolutionModeSel ??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@note ????sum????????????bin???????????????????????????????????
*@see dvpGetQuickRoiSel
*@see dvpGetRoi
*@see dvpGetResolutionModeSelDescr
*@see dvpGetResolutionModeSelDetail
*@see dvpSetResolutionModeSel
*/
dvp2api dvpStatus dvpGetResolutionModeSel(dvpHandle handle, dvpUint32 *pResolutionModeSel);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[in] ResolutionModeSel ??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@note ????sum????????????bin???????????????????????????????????
*@see dvpGetQuickRoiSel
*@see dvpGetRoi
*@see dvpGetResolutionModeSelDescr
*@see dvpGetResolutionModeSelDetail
*@see dvpGetResolutionModeSel
*/
dvp2api dvpStatus dvpSetResolutionModeSel(dvpHandle handle, dvpUint32 ResolutionModeSel);


/**
*@brief ??????????????????????????
*@param[in] handle ??????
*@param[out] pResolutionModeSelDescr ???????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@note ????sum????????????bin???????????????????????????????????
*@see dvpGetQuickRoiSel
*@see dvpGetRoi
*@see dvpGetResolutionModeSel
*@see dvpGetResolutionModeSelDetail
*/
dvp2api dvpStatus dvpGetResolutionModeSelDescr(dvpHandle handle, dvpSelectionDescr *pResolutionModeSelDescr);


/**
*@brief ???????????????????????????????
*@param[in] handle ??????
*@param[in] ResolutionModeSel ?????????????
*@param[out] pResolutionModeSelDetail ????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@note ????sum????????????bin???????????????????????????????????
*@see dvpGetQuickRoiSel
*@see dvpGetRoi
*@see dvpGetResolutionModeSel
*@see dvpGetResolutionModeSelDescr
*/
dvp2api dvpStatus dvpGetResolutionModeSelDetail(dvpHandle handle, dvpUint32 ResolutionModeSel, dvpResolutionMode *pResolutionModeSelDetail);


/**
*@brief ??????????????????????
*@param[in] handle ??????
*@param[out] pAeSchemeSel ???????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@note ????????????????????????????
*@see dvpGetAeSchemeSelDescr
*@see dvpGetAeSchemeSelDetail
*@see dvpSetAeSchemeSel
*/
dvp2api dvpStatus dvpGetAeSchemeSel(dvpHandle handle, dvpUint32 *pAeSchemeSel);


/**
*@brief ??????????????????????
*@param[in] handle ??????
*@param[in] AeSchemeSel ???????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@note ????????????????????????????
*@see dvpGetAeSchemeSelDescr
*@see dvpGetAeSchemeSelDetail
*@see dvpGetAeSchemeSel
*/
dvp2api dvpStatus dvpSetAeSchemeSel(dvpHandle handle, dvpUint32 AeSchemeSel);


/**
*@brief ???????????????????????????
*@param[in] handle ??????
*@param[out] pAeSchemeSelDescr ????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@note ????????????????????????????
*@see dvpGetAeSchemeSel
*@see dvpGetAeSchemeSelDetail
*/
dvp2api dvpStatus dvpGetAeSchemeSelDescr(dvpHandle handle, dvpSelectionDescr *pAeSchemeSelDescr);


/**
*@brief ????????????????????????????????
*@param[in] handle ??????
*@param[in] AeSchemeSel ??????????????
*@param[out] pAeSchemeSelDetail ?????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_EXPOSURE
*@note ????????????????????????????
*@see dvpGetAeSchemeSel
*@see dvpGetAeSchemeSelDescr
*/
dvp2api dvpStatus dvpGetAeSchemeSelDetail(dvpHandle handle, dvpUint32 AeSchemeSel, dvpSelection *pAeSchemeSelDetail);


/**
*@brief ??????????Roi????????
*@param[in] handle ??????
*@param[out] pQuickRoiSel ???????Roi????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetRoi
*@note ???????????ROI
*@see dvpGetQuickRoiSelDescr
*@see dvpGetQuickRoiSelDetail
*@see dvpSetQuickRoiSel
*/
dvp2api dvpStatus dvpGetQuickRoiSel(dvpHandle handle, dvpUint32 *pQuickRoiSel);


/**
*@brief ??????????Roi????????
*@param[in] handle ??????
*@param[in] QuickRoiSel ???????Roi????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetRoi
*@note ???????????ROI
*@see dvpGetQuickRoiSelDescr
*@see dvpGetQuickRoiSelDetail
*@see dvpGetQuickRoiSel
*/
dvp2api dvpStatus dvpSetQuickRoiSel(dvpHandle handle, dvpUint32 QuickRoiSel);


/**
*@brief ???????Roi????????????????
*@param[in] handle ??????
*@param[out] pQuickRoiSelDescr ????Roi????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetRoi
*@note ???????????ROI
*@see dvpGetQuickRoiSel
*@see dvpGetQuickRoiSelDetail
*/
dvp2api dvpStatus dvpGetQuickRoiSelDescr(dvpHandle handle, dvpSelectionDescr *pQuickRoiSelDescr);


/**
*@brief ??????????Roi??????????????????
*@param[in] handle ??????
*@param[in] QuickRoiSel ????Roi??????
*@param[out] pQuickRoiSelDetail ???????Roi??????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_SIZE
*@see dvpGetResolutionModeSel
*@see dvpGetRoi
*@note ???????????ROI
*@see dvpGetQuickRoiSel
*@see dvpGetQuickRoiSelDescr
*/
dvp2api dvpStatus dvpGetQuickRoiSelDetail(dvpHandle handle, dvpUint32 QuickRoiSel, dvpQuickRoi *pQuickRoiSelDetail);


/**
*@brief ????????????????????????
*@param[in] handle ??????
*@param[out] pPixelRateSel ?????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????USB2????????????????????
*@see dvpGetPixelRateSelDescr
*@see dvpGetPixelRateSelDetail
*@see dvpSetPixelRateSel
*/
dvp2api dvpStatus dvpGetPixelRateSel(dvpHandle handle, dvpUint32 *pPixelRateSel);


/**
*@brief ????????????????????????
*@param[in] handle ??????
*@param[in] PixelRateSel ?????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????USB2????????????????????
*@see dvpGetPixelRateSelDescr
*@see dvpGetPixelRateSelDetail
*@see dvpGetPixelRateSel
*/
dvp2api dvpStatus dvpSetPixelRateSel(dvpHandle handle, dvpUint32 PixelRateSel);


/**
*@brief ?????????????????????????????
*@param[in] handle ??????
*@param[out] pPixelRateSelDescr ??????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????USB2????????????????????
*@see dvpGetPixelRateSel
*@see dvpGetPixelRateSelDetail
*/
dvp2api dvpStatus dvpGetPixelRateSelDescr(dvpHandle handle, dvpSelectionDescr *pPixelRateSelDescr);


/**
*@brief ??????????????????????????????????
*@param[in] handle ??????
*@param[in] PixelRateSel ???????????????
*@param[out] pPixelRateSelDetail ???????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????USB2????????????????????
*@see dvpGetPixelRateSel
*@see dvpGetPixelRateSelDescr
*/
dvp2api dvpStatus dvpGetPixelRateSelDetail(dvpHandle handle, dvpUint32 PixelRateSel, dvpSelection *pPixelRateSelDetail);


/**
*@brief ?????????????????????????????
*@param[in] handle ??????
*@param[out] pPacketSizeSel ??????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ???б???????@link #dvpGetStreamPackSize ???????????@endlink
*@see dvpGetPacketSizeSelDescr
*@see dvpGetPacketSizeSelDetail
*@see dvpSetPacketSizeSel
*/
dvp2api dvpStatus dvpGetPacketSizeSel(dvpHandle handle, dvpUint32 *pPacketSizeSel);


/**
*@brief ?????????????????????????????
*@param[in] handle ??????
*@param[in] PacketSizeSel ??????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ???б???????@link #dvpGetStreamPackSize ???????????@endlink
*@see dvpGetPacketSizeSelDescr
*@see dvpGetPacketSizeSelDetail
*@see dvpGetPacketSizeSel
*/
dvp2api dvpStatus dvpSetPacketSizeSel(dvpHandle handle, dvpUint32 PacketSizeSel);


/**
*@brief ??????????????????????????????????
*@param[in] handle ??????
*@param[out] pPacketSizeSelDescr ???????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ???б???????@link #dvpGetStreamPackSize ???????????@endlink
*@see dvpGetPacketSizeSel
*@see dvpGetPacketSizeSelDetail
*/
dvp2api dvpStatus dvpGetPacketSizeSelDescr(dvpHandle handle, dvpSelectionDescr *pPacketSizeSelDescr);


/**
*@brief ???????????????????????????????????????
*@param[in] handle ??????
*@param[in] PacketSizeSel ?????????????????????
*@param[out] pPacketSizeSelDetail ????????????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ???б???????@link #dvpGetStreamPackSize ???????????@endlink
*@see dvpGetPacketSizeSel
*@see dvpGetPacketSizeSelDescr
*/
dvp2api dvpStatus dvpGetPacketSizeSelDetail(dvpHandle handle, dvpUint32 PacketSizeSel, dvpSelection *pPacketSizeSelDetail);


/**
*@brief ???????????????????????
*@param[in] handle ??????
*@param[out] pAccelerateSel ????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????????????????GPU???????????
*@see dvpGetAccelerateSelDescr
*@see dvpGetAccelerateSelDetail
*@see dvpSetAccelerateSel
*/
dvp2api dvpStatus dvpGetAccelerateSel(dvpHandle handle, dvpUint32 *pAccelerateSel);


/**
*@brief ???????????????????????
*@param[in] handle ??????
*@param[in] AccelerateSel ????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????????????????GPU???????????
*@see dvpGetAccelerateSelDescr
*@see dvpGetAccelerateSelDetail
*@see dvpGetAccelerateSel
*/
dvp2api dvpStatus dvpSetAccelerateSel(dvpHandle handle, dvpUint32 AccelerateSel);


/**
*@brief ????????????????????????????
*@param[in] handle ??????
*@param[out] pAccelerateSelDescr ?????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????????????????GPU???????????
*@see dvpGetAccelerateSel
*@see dvpGetAccelerateSelDetail
*/
dvp2api dvpStatus dvpGetAccelerateSelDescr(dvpHandle handle, dvpSelectionDescr *pAccelerateSelDescr);


/**
*@brief ?????????????????????????????????
*@param[in] handle ??????
*@param[in] AccelerateSel ???????????????
*@param[out] pAccelerateSelDetail ??????????????????????????????
*@return ?????????????????????@link #dvpStatus::DVP_STATUS_OK DVP_STATUS_OK@endlink
*@ingroup DVP_PERFORMANCE
*@note ????????????????????GPU???????????
*@see dvpGetAccelerateSel
*@see dvpGetAccelerateSelDescr
*/
dvp2api dvpStatus dvpGetAccelerateSelDetail(dvpHandle handle, dvpUint32 AccelerateSel, dvpSelection *pAccelerateSelDetail);


/**
*@brief ???ú?,??,???????????????
*@param[in] handle ??????
*@param[in] rGain ???????????
*@param[in] gGain ???????????
*@param[in] bGain ???????????
*@ingroup DVP_COLOR
*@see dvpGetRgbGain
*@see dvpSetRgbGainState
*@see dvpGetRgbGainState
*@note ?????渽????@link #dvpSetAwbOperation ?????@endlink??Ч?????????????????
*/
dvp2api dvpStatus dvpSetRgbGain(dvpHandle handle, float rGain, float gGain, float bGain);


/**
*@brief ?????,??,???????????????
*@param[in] handle ??????
*@param[out] prGain ???????????
*@param[out] pgGain ???????????
*@param[out] pbGain ???????????
*@ingroup DVP_COLOR
*@see dvpSetRgbGain
*@see dvpSetRgbGainState
*@see dvpGetRgbGainState
*/
dvp2api dvpStatus dvpGetRgbGain(dvpHandle handle, float *prGain, float *pgGain, float *pbGain);


/**
*@brief ???ú?,??,??????????????湦????????
*@param[in] handle ??????
*@param[in] state ??,??,??????????????湦????????
*@ingroup DVP_COLOR
*@see dvpSetRgbGain
*@see dvpGetRgbGain
*@see dvpGetRgbGainState
*/
dvp2api dvpStatus dvpSetRgbGainState(dvpHandle handle, bool state);


/**
*@brief ?????,??,??????????????湦????????
*@param[in] handle ??????
*@param[out] pState ??,??,??????????????湦????????
*@ingroup DVP_COLOR
*@see dvpSetRgbGain
*@see dvpGetRgbGain
*@see dvpSetRgbGainState
*/
dvp2api dvpStatus dvpGetRgbGainState(dvpHandle handle, bool *pState);



/** @defgroup DVP2_API_BASE ????????
*@{
*/
/**
*@brief ??????????????б???????????????
*@param[out] pCount ???????
*@see dvpEnum
*@see dvpOpen
*@see dvpOpenByName
*@note ?????@link #dvpEnum ???@endlink??@link #dvpOpen ??@endlink??????У???????????????
*/
dvp2api dvpStatus dvpRefresh(dvpUint32 *pCount);


/**
*@brief ?????????????????
*@param[in] index ???????
*@param[out] pCameraInfo ??????
*@see dvpGetCameraInfo
*@code
dvpUint32 count = 0;
dvpRefresh(&count);
for (dvpUint32 i = 0; i < count; i++)
{
    dvpCameraInfo info;
    if(dvpEnum(i, &info) == DVP_STATUS_OK)
    {
        printf("Camera %d FriendlyName : %s\n", i, info.FriendlyName);
    }
}
*@endcode
*@note ?????@link #dvpRefresh ???@endlink???????У???????????????
*@warning ???????@link #dvpHandle ??????@endlink????????????????????????
*/
dvp2api dvpStatus dvpEnum(dvpUint32 index, dvpCameraInfo *pCameraInfo);


/**
*@brief ????@link #dvpCameraInfo::FriendlyName ???????@endlink???????
*@param[in] friendlyName ???????
*@note ???????????????????????
*@param[in] mode ????
*@param[out] pHandle ??????
*@see dvpEnum
*@see dvpOpen
*@see dvpOpenByUserId
*@see dvpGetCameraInfo
*@note ??????????@link #dvpRefresh ???@endlink???????
*@warning ??????@link #dvpStreamCallback ???????@endlink?????????
*/
dvp2api dvpStatus dvpOpenByName(dvpStr friendlyName, dvpOpenMode mode, dvpHandle *pHandle);


/**
*@brief ????@link #dvpCameraInfo::UserID (User Defined Name) ???????@endlink???????
*@param[in] UserId ???????
*@note ?????????????????????????
*@param[in] mode ????
*@param[out] pHandle ??????
*@see dvpSetUserId
*@see dvpEnum
*@see dvpOpen
*@see dvpOpenByName
*@see dvpGetCameraInfo
*@note ??????????@link #dvpRefresh ???@endlink???????
*@warning ??????@link #dvpStreamCallback ???????@endlink?????????
*/
dvp2api dvpStatus dvpOpenByUserId(dvpStr UserId, dvpOpenMode mode, dvpHandle *pHandle);


/**
*@brief ???????????????????
*@param[in] index ???????
*@param[in] mode ????
*@param[out] pHandle ??????
*@see dvpRefresh
*@see dvpEnum
*@see dvpOpenByName
*@see dvpGetCameraInfo
*@note ?????@link #dvpRefresh ???@endlink???????У???????????????
*@warning ??????@link #dvpStreamCallback ???????@endlink?????????
*/
dvp2api dvpStatus dvpOpen(dvpUint32 index, dvpOpenMode mode, dvpHandle *pHandle);


/**
*@brief ??????????????Ч
*@param[in] handle ??????
*@param[out] pIsValid ??Ч??
*@note @link #dvpOpen ??@endlink?????????Ч??@link #dvpClose ???@endlink????????Ч
*/
dvp2api dvpStatus dvpIsValid(dvpHandle handle, bool *pIsValid);


/**
*@brief ?????????????
*@param[in] handle ??????
*@param[out] pIsOnline ??????
*@note ???????@link #dvpRegisterEventCallback ?????????????@endlink????????????????
*/
dvp2api dvpStatus dvpIsOnline(dvpHandle handle, bool *pIsOnline);


/**
*@brief ??????USB????
*@param[in] handle ??????
*@param[out] pLinkSpeed ???USB????
*@note ???????@link ????0 ????usb2.0??1.0 ????1 ????usb3.0
*/
dvp2api dvpStatus dvpGetLinkSpeed(dvpHandle handle, dvpUint32 *pLinkSpeed);


/**
*@brief ??????????????????????
*@param[in] handle ??????
*@see dvpOpen
*@see dvpHold
*@see dvpStop
*@note ?????????????????????????????????????????????????@link #dvpRestart dvpRestart@endlink???????????????@link #dvpHold dvpHold@endlink
*/
dvp2api dvpStatus dvpStart(dvpHandle handle);


/**
*@brief ????????????????????
*@param[in] handle ??????
*@see dvpStart
*@see dvpClose
*@see dvpHold
*@note ????????????????????????????????????????????????@link #dvpHold dvpHold@endlink
*@warning ?????????????е?????????????????????
*/
dvp2api dvpStatus dvpStop(dvpHandle handle);


/**
*@brief ??????????????????
*@param[in] handle ??????
*@param[out] pIsHold ?????
*@see dvpHold
*@see dvpRestart
*/
dvp2api dvpStatus dvpIsHold(dvpHandle handle, bool *pIsHold);


/**
*@brief ????????
*@param[in] handle ??????
*@param[out] pFrame ????
*@param[out] pBuffer ??????????????? @warning ??????????
*@param[in] timeout ??????????
*@see dvpGetFrameBuffer
*@see dvpStreamCallback
*@note ????@link #dvpStart ????@endlink??????????????????
*@warning ????????????????????棬??????ε??????????????????Ч?????????????????????????У???????????????????α???
*/
dvp2api dvpStatus dvpGetFrame(dvpHandle handle, dvpFrame *pFrame, void **pBuffer, dvpUint32 timeout);


/**
*@brief ????????????ID????????????????????
*@param[in] handle ??????
*@param[out] pRaw ??????
*@param[out] pOut ???????
*@param[in] timeout ??????????
*@see dvpGetFrame
*@note ????@link #dvpStart ????@endlink??????????????????
*@warning ????????????????????棬??????ε??????????????????Ч?????????????????????????У???????????????????α???
*/
dvp2api dvpStatus dvpGetFrameBuffer(dvpHandle handle, dvpFrameBuffer *pRaw, dvpFrameBuffer *pOut, dvpUint32 timeout);


/**
*@brief ?????????ж???????У?ISP???????????????
*@param[in] handle ??????
*@param[in] pSourceFrame ?????
*@note ?????@link #dvpGetFrame dvpGetFrame@endlink ???? 
*@param[in] pSourceBuffer ?????????????????
*@note ?????@link #dvpGetFrame dvpGetFrame@endlink ????
*@param[out] pTargetFrame ???????
*@param[out] pTargetBuffer ???????
*@note ???????????????????
*@param[in] targetBufferSize ????????
*@note ??????????????????????
*@param[in] targetFormat ????????
*@see dvpGetFrame
*@note ????@link #dvpStart ????@endlink??????????????????
*@warning ?????@link #dvpStreamCallback ????????????@endlink???????????????????@link #dvpStreamEvent::STREAM_EVENT_FRAME_THREAD STREAM_EVENT_FRAME_THREAD@endlink???????
*/
dvp2api dvpStatus dvpProcessImage(dvpHandle handle, const dvpFrame *pSourceFrame, const void *pSourceBuffer, dvpFrame *pTargetFrame, void *pTargetBuffer, dvpUint32 targetBufferSize, dvpStreamFormat targetFormat);


/**
*@brief ???浱??????
*@param[in] handle ??????
*@param[in] part ??????????????????
*@param[in] level ???????????????
*@param[in] bForce ?????????????????????????????????
*@param[in] text ???????????????????????????????
*@param[in] param ???????????????????0
*@warning ???????????????
*@note ???????????????????????????????????????豸??????????????????????
*/
dvp2api dvpStatus dvpDebugReport(dvpHandle handle, dvpReportPart part, dvpReportLevel level, bool bForce, dvpStr text, dvpUint32 param);


/**
*@brief ???????????????????
*@param[in] handle ??????
*@see dvpStop
*@see dvpIsValid
*@warning ??????@link #dvpStreamCallback ???????@endlink?????????
*@warning ??????????????????????á???????δ???????????????????????
*/
dvp2api dvpStatus dvpClose(dvpHandle handle);



/** @defgroup DVP2_API_CALLBACK ???????
*@warning ?????????????е????κ????@link #dvpStop ???????@endlink????????Щ?????????????????????????????????
*@{
*/
/** @brief ????????????
*@param[in] handle ??????
*@param[in] event ???????
*@param[in] pContext ??????
*@param[in] pFrame ????
*@param[in] pBuffer ???????
*@see dvpRegisterStreamCallback
*@see dvpUnregisterStreamCallback
*@note ?????????????У?@link #dvpProcessImage ????@endlink??@link #dvpDrawPicture ???@endlink??@link #dvpSavePicture ?洢@endlink???
*@warning ?????????????У?@link #dvpOpen ??@endlink??@link #dvpClose ???@endlink??@link #dvpStart ????@endlink??@link #dvpStop ??@endlink????????@link #dvpGetFrame ?????@endlink  */
typedef dvpInt32(*dvpStreamCallback)(dvpHandle handle, dvpStreamEvent event, void *pContext, dvpFrame *pFrame, void *pBuffer);

/**
*@brief ???????????????
*@param[in] handle ??????
*@param[in] proc ???????????????
*@param[in] event ????????????????
*@param[in] pContext ???????????????
*@see dvpUnregisterStreamCallback
*/
dvp2api dvpStatus dvpRegisterStreamCallback(dvpHandle handle, dvpStreamCallback proc, dvpStreamEvent event, void *pContext);


/**
*@brief ???????????????
*@param[in] handle ??????
*@param[in] proc ???????????????
*@param[in] event ????????????????
*@param[in] pContext ???????????????
*@note ????@link #dvpRegisterStreamCallback ?????????@endlink?????????????????????????????
*/
dvp2api dvpStatus dvpUnregisterStreamCallback(dvpHandle handle, dvpStreamCallback proc, dvpStreamEvent event, void *pContext);


/** @brief ????????????
*@param[in] handle ??????
*@param[in] event ???????
*@param[in] pContext ??????
*@param[in] param ?????????????????
*@param[in] pVariant ?????????????????
*@see dvpRegisterEventCallback */
typedef dvpInt32(*dvpEventCallback)(dvpHandle handle, dvpEvent event, void *pContext, dvpInt32 param, struct dvpVariant *pVariant);

/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] proc ???????????????
*@param[in] event ????????????????
*@param[in] pContext ???????????????
*@see dvpUnregisterEventCallback
*/
dvp2api dvpStatus dvpRegisterEventCallback(dvpHandle handle, dvpEventCallback proc, dvpEvent event, void *pContext);


/**
*@brief ????????????????
*@param[in] handle ??????
*@param[in] proc ???????????????
*@param[in] event ????????????????
*@param[in] pContext ???????????????
*@note ????@link #dvpRegisterEventCallback ?????????@endlink?????????????????????????????
*/
dvp2api dvpStatus dvpUnregisterEventCallback(dvpHandle handle, dvpEventCallback proc, dvpEvent event, void *pContext);


/** @} end of DVP2_API_CALLBACK */

/** @defgroup DVP2_API_CONFIG ?浵????
*@{
*/
/**
*@brief ???????????
*@param[in] handle ??????
*@see dvpLoadConfig
*@see dvpSaveConfig
*@warning ??????????????б??????????@link #dvpSaveConfig ??????????@endlink?????????
*/
dvp2api dvpStatus dvpLoadDefault(dvpHandle handle);


/**
*@brief ??????????м???????
*@param[in] handle ??????
*@param[in] path ?????????·?????????????????·?????????????????·???????????
*@see dvpLoadDefault
*@see dvpSaveConfig
*@note ?浵·?????λ??<a href="C:/ProgramData/DO3THINK/DVP2">C:/ProgramData/DO3THINK/DVP2</a>
*@warning ??????????????б??????????@link #dvpSaveConfig ??????????@endlink?????????
*/
dvp2api dvpStatus dvpLoadConfig(dvpHandle handle, dvpStr path);


/**
*@brief ?????????浽???????
*@param[in] handle ??????
*@param[in] path ?????????·?????????????????·?????????????????·???????????
*@see dvpLoadDefault
*@see dvpLoadConfig
*@note ?浵·?????λ??<a href="C:/ProgramData/DO3THINK/DVP2">C:/ProgramData/DO3THINK/DVP2</a>
*@warning ??????????????ж???????д?????
*/
dvp2api dvpStatus dvpSaveConfig(dvpHandle handle, dvpStr path);


/**
*@brief ????????????????洢??
*@param[in] handle ??????
*@param[in] UserSet ??????????
*@see dvpLoadUserSet
*@see dvpGetUserSet
*@warning ????????@link #dvpUserSet::USER_SET_DEFAULT ??????????@endlink
*/
dvp2api dvpStatus dvpSaveUserSet(dvpHandle handle, dvpUserSet UserSet);


/**
*@brief ??????洢?????????????
*@param[in] handle ??????
*@param[in] UserSet ??????????
*@see dvpSaveUserSet
*@see dvpGetUserSet
*@note ?????@link #dvpUserSet::USER_SET_DEFAULT ??????????@endlink????
*/
dvp2api dvpStatus dvpLoadUserSet(dvpHandle handle, dvpUserSet UserSet);


/** @} end of DVP2_API_CONFIG */
/** @} end of DVP2_API_BASE */

/** @defgroup DVP2_API_EXTEND ??ù???
*@{
*/
/**
*@brief ?????浽???
*@param[in] pFrame ????
*@param[in] pBuffer ???????????????????????????????????RAW, RGB24??
*@param[in] file ???????????·???????????????????????????????????????????????????bmp, jpeg, jpg, png, tiff, tif, gif, dat(?????????)??
*@param[in] quality ???????????jpeg?????Ч??????????Χ??[1,100]
*@see dvpGetFrame
*@see dvpStreamCallback
*/
dvp2api dvpStatus dvpSavePicture(const dvpFrame *pFrame, const void *pBuffer, dvpStr file, dvpInt32 quality);


/**
*@brief ???????????????????????
*@param[in] handle ??????
*@param[in] ResoulutionModeSel ???????@link #dvpGetResolutionModeSel ????@endlink
*@param[in] roi @link #dvpGetRoi ROI@endlink???????NULL??????????????????????
*@param[in] timeout @link #dvpGetFrame ???@endlink??????
*@param[in] filePath ???????????·???????????????????????????????????????????????????bmp, jpeg, jpg, png, tiff, tif, gif, dat(?????????)??
*@param[in] quality ???????????jpeg?????Ч??????????Χ??[1,100]
*@see dvpSavePicture
*/
dvp2api dvpStatus dvpCaptureFile(dvpHandle handle, dvpUint32 ResoulutionModeSel, dvpRegion *roi, dvpUint32 timeout, dvpStr filePath, dvpInt32 quality);


/**
*@brief ????????????????????
*@param[in] pFrame ????
*@param[in] pSrcBuffer ???????????????????????????????????RAW, RGB24??
*@param[in] format ???????????????????????jpg???? ??png??????*.jpg??????*.png?????????????????????bmp, jpeg, jpg, png, tiff, tif, gif, dat(?????????)??
*@param[in] quality ???????????jpeg?????Ч??????????Χ??[1,100]
*@param[out] pDstBuffer ???????????????????
*@param[in] uByteSize ??????????????????
*@param[out] pValidByteSize ??????????????????Ч?????
*@see dvpSavePicture
*@see dvpPrintPictureToBuffer
*/
dvp2api dvpStatus dvpPrintPictureToBuffer(const dvpFrame *pFrame, const void *pSrcBuffer, dvpStr format, dvpInt32 quality, void *pDstBuffer, dvpUint32 uByteSize, dvpUint32 *pValidByteSize);


#ifdef _WIN32
/**
*@brief ?????????????
*@param[in] pFrame ????
*@param[in] pBuffer ???????????????????????????????????@link #dvpImageFormat::FORMAT_MONO MONO@endlink??@link #dvpImageFormat::FORMAT_BAYER_BG BAYER@endlink?? @link #dvpImageFormat::FORMAT_BGR24 BGR24@endlink?? 
*@param[in] hWnd ????????????????
*@param[in] sRect ??????????????????????????????????
*@param[in] dRect ???????????????????????????????????
*@note ??????@link #dvpStreamCallback ????????????@endlink?????????
*/
dvp2api dvpStatus dvpDrawPicture(const dvpFrame *pFrame, const void *pBuffer, HWND hWnd, LPRECT sRect, LPRECT dRect);


/**
*@brief ????????????????????????????????????
*@param[in] filePath ??????????????·????????????????????????????????????????????????????wmv, avi??
*@param[in] width ??????????????????????
*@param[in] height ??????????????????????
*@param[in] quality ???????????????avi?????Ч??????????Χ??[1,100]
*@param[out] pHandle ????????????
*@see dvpSetTargetFormat
*@see dvpVideoRecordWrite
*@see dvpStopVideoRecord
*@warning ?????????????????е?WINDOWS?????????????WMV?????????????????е? <a href="https://www.codecguide.com/windows_media_codecs.htm">???????</a>????????????汾?????
*/
dvp2api dvpStatus dvpStartVideoRecord(dvpStr filePath, dvpUint32 width, dvpUint32 height, dvpInt32 quality, dvpRecordHandle *pHandle);


/**
*@brief ?????????????????????Ч
*@param[in] handle ????????????
*@param[out] pValid ??Ч??
*@note @link #dvpStartVideoRecord ???????@endlink?????????Ч??@link #dvpStopVideoRecord ?????@endlink????????Ч
*/
dvp2api dvpStatus dvpIsVideoRecorderValid(dvpRecordHandle handle, bool *pValid);


/**
*@brief ???????????д????????
*@param[in] handle ????????????
*@param[in] pFrame ????
*@param[in] pBuffer ???????????????????????????????????@link #dvpImageFormat::FORMAT_BGR24 BGR24@endlink??
*@see dvpGetFrame
*@see dvpStartVideoRecord
*@see dvpStopVideoRecord
*@note @link #dvpStartVideoRecord ???????@endlink?????????@link #dvpSetTargetFormat ?趨????????@endlink
*/
dvp2api dvpStatus dvpVideoRecordWrite(dvpRecordHandle handle, const dvpFrame *pFrame, const void *pBuffer);


/**
*@brief ?????????????????????????????????
*@param[in] handle ????????????
*@see dvpVideoRecordWrite
*@see dvpStartVideoRecord
*/
dvp2api dvpStatus dvpStopVideoRecord(dvpRecordHandle handle);


/**
*@brief ?????????????????
*@param[in] handle ??????
*@param[in] hParent ????????????
*/
dvp2api dvpStatus dvpShowPropertyModalDialog(dvpHandle handle, HWND hParent);


#endif
/**
*@brief ??????洢???ж??????????????
*@param[in] handle ??????
*@param[in] addr ??????????
*@param[in, out] pBuffer ????????????
*@param[in] size ???????
*@see dvpWriteUserData
*@note ??????????????洢???????洢????????????4k????
*@note ????@link #dvpOpen ??@endlink????????????????
*@warning ??????????????????
*/
dvp2api dvpStatus dvpReadUserData(dvpHandle handle, dvpUint32 addr, void *pBuffer, dvpUint32 size);


/**
*@brief ??????????????д????????洢??
*@param[in] handle ??????
*@param[in] addr ?????д????
*@param[in] pBuffer ????????????
*@param[in] size ???????
*@see dvpReadUserData
*@note д?????????????洢???????洢????????????4k????
*@note ????@link #dvpOpen ??@endlink????????????????
*@warning ??????????????????
*/
dvp2api dvpStatus dvpWriteUserData(dvpHandle handle, dvpUint32 addr, const void *pBuffer, dvpUint32 size);


/**
*@brief ?????趨???@link #dvpCameraInfo::UserID (User Defined Name) @endlink
*@param[in] handle ??????
*@param[in] UserId ???????
*@param[in, out] pLength ?????????????????????????????????????
*@see dvpGetCameraInfo
*/
dvp2api dvpStatus dvpSetUserId(dvpHandle handle, dvpStr UserId, dvpUint32 *pLength);


/** @} end of DVP2_API_EXTEND */

/** @defgroup DVP2_API_INTERNAL ???????
*@{
*/
/**
*@brief ????????????????????
*@param[in] handle ??????
*@param[in] command ??????
*@param[in, out] pParam ???????
*@param[in, out] pSize ?????????????С?????????С
*@warning ???????????????????????????δ???????????????
*/
dvp2api dvpStatus dvpGet(dvpHandle handle, dvpUint32 command, void *pParam, dvpUint32 *pSize);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[in] command ??????
*@param[in, out] pParam ???????
*@param[in, out] pSize ?????????????С?????????С
*@warning ???????????????????????????δ???????????????
*/
dvp2api dvpStatus dvpSet(dvpHandle handle, dvpUint32 command, const void *pParam, dvpUint32 *pSize);


/**
*@brief ????dvp
*@param[in] command ??????
*@param[in] param ????
*@param[in] pData ????
*@warning ???????????????????????????δ???????????????
*/
dvp2api dvpStatus dvpConfig(dvpUint32 command, dvpUint32 param, const void* pData);


/**
*@brief ???????????????
*@param[in] index ???????
*@param[in] command ??????
*@param[in] param ????
*@param[in] pData ????
*@see dvpEnum
*@warning ???????????????????????????δ???????????????
*/
dvp2api dvpStatus dvpConfigEx(dvpUint32 index, dvpUint32 command, dvpUint32 param, const void* pData);


/** @} end of DVP2_API_INTERNAL */

/** @defgroup DVP2_API_BRIDGE ??????
*@{
*/
/**
*@brief ???Integer?????
*@param[in] handle ??????
*@param[in] strKey ???????????????????????Width??
*@param[out] pCurIntValue ????
*@param[out] pstIntDescr int??????????????
*/
dvp2api dvpStatus dvpGetIntValue(IN dvpHandle handle, IN const char* strKey, OUT int64_t* pCurIntValue, OUT dvpIntDescr* pstIntDescr);


/**
*@brief ????Integer???????
*@param[in] handle ?豸???
*@param[in] strKey ???????????????????????Width??
*@param[in] nValue ?????????豸???????
*/
dvp2api dvpStatus dvpSetIntValue(IN dvpHandle handle, IN const char* strKey, IN int64_t nValue);


/**
*@brief ???uInteger64?????
*@param[in] handle ??????
*@param[in] strKey ???????????????????????Width??
*@param[out] pCurUint64Value ????
*@param[out] pstUint64Descr uint64_t??????????????
*/
dvp2api dvpStatus dvpGetUint64Value(IN dvpHandle handle, IN const char* strKey, OUT uint64_t* pCurUint64Value, OUT dvpUint64Descr* pstUint64Descr);


/**
*@brief ????uInteger64???????
*@param[in] handle ?豸???
*@param[in] strKey ???????????????????????Width??
*@param[in] nValue ?????????豸???????
*/
dvp2api dvpStatus dvpSetUint64Value(IN dvpHandle handle, IN const char* strKey, IN uint64_t nValue);


/**
*@brief ???Enum?????
*@param[in] handle ?豸???
*@param[in] strKey ??????????????????????????PixelFormat??
*@param[out] nszSupportValue ???????????????????????
*@param[out] pnSupportNum ??Ч??????????
*/
dvp2api dvpStatus dvpGetEnumValue(IN dvpHandle handle, IN const char* strKey, OUT unsigned int* pCurEnumValue, OUT unsigned int nszSupportValue[64], OUT unsigned int* pnSupportNum);


/**
*@brief ????Enum???????
*@param[in] handle ?豸???
*@param[in] strKey ??????????????????????????PixelFormat??
*@param[in] nValue ?????????豸???????
*/
dvp2api dvpStatus dvpSetEnumValue(IN dvpHandle handle, IN const char* strKey, IN unsigned int nValue);


/**
*@brief ??????????????Enum???????
*@param[in] handle ?豸???
*@param[in] strKey ??????????????????????????PixelFormat??
*@param[in] strValue ?????????豸????????????????????豸???????????
*/
dvp2api dvpStatus dvpSetEnumValueByString(IN dvpHandle handle, IN const char* strKey, IN const char* strValue);


/**
*@brief ???Float?????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[out] pCurFloatValue ????
*@param[out] pstFloatDescr float??????????????
*/
dvp2api dvpStatus dvpGetFloatValue(IN dvpHandle handle, IN const char* strKey, OUT float* pCurFloatValue, OUT dvpFloatDescr* pstFloatDescr);


/**
*@brief ????float???????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[in] fValue ?????????豸???????

*/
dvp2api dvpStatus dvpSetFloatValue(IN dvpHandle handle, IN const char* strKey, IN float fValue);


/**
*@brief ???double?????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[out] pCurDoubleValue ????
*@param[out] pstDoubleDescr double??????????????
*/
dvp2api dvpStatus dvpGetDoubleValue(IN dvpHandle handle, IN const char* strKey, OUT double* pCurDoubleValue, OUT dvpDoubleDescr* pstDoubleDescr);


/**
*@brief ????double???????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[in] dValue ?????????豸???????

*/
dvp2api dvpStatus dvpSetDoubleValue(IN dvpHandle handle, IN const char* strKey, IN double dValue);


/**
*@brief ???Boolean?????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[out] pbValue ????????????й??豸?????
*/
dvp2api dvpStatus dvpGetBoolValue(IN dvpHandle handle, IN const char* strKey, OUT bool* pbValue);


/**
*@brief ????Boolean???????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[in] bValue ?????????豸???????
*/
dvp2api dvpStatus dvpSetBoolValue(IN dvpHandle handle, IN const char* strKey, IN bool bValue);


/**
*@brief ???String?????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[out] pstStringValue ????????????й??豸??????????
*/
dvp2api dvpStatus dvpGetStringValue(IN dvpHandle handle, IN const char* strKey, OUT char* pstStringValue, IN const int i32StrValueSize);


/**
*@brief ????String???????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*@param[in] strValue ?????????豸???????
*/
dvp2api dvpStatus dvpSetStringValue(IN dvpHandle handle, IN const char* strKey, IN const char* strValue);


/**
*@brief ????Command???????
*@param[in] handle ?豸???
*@param[in] strKey ??????
*/
dvp2api dvpStatus dvpSetCommandValue(IN dvpHandle handle, IN const char* strKey);


/**
*@brief ??????????????
*@param[in] handle ?豸???
*@param[in] RotateAngle ?????? 1:90?? 2:180?? 3: 270?? 
*/
dvp2api dvpStatus dvpRotateImage(IN dvpHandle handle, IN int RotateAngle);


/**
*@brief ???GenICam????棨δ????
*@param[in] handle ?豸???
*/
dvp2api dvpStatus dvpInvalidateNodes(IN dvpHandle handle);


/**
*@brief ???XML???????
*@param[in] handle ?豸???
*@param[out] pXmlBuf ????xml????buf
*@param[in] nXmlSize buf??С
*/
dvp2api dvpStatus dvpGetXml(IN dvpHandle handle, OUT void *pXmlBuf, IN unsigned int nXmlSize);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[in] name ??????
*@param[in, out] pSelectionDescr ???????????????????????
*@warning ???????????????????????????δ???????????????
*/
dvp2api dvpStatus dvpGetSelectionDescr(dvpHandle handle, dvpStr name, dvpSelectionDescr* pSelectionDescr);


/**
*@brief ?????????????????????
*@param[in] handle ??????
*@param[in] name ??????
*@param[in] index ?????????
*@param[in, out] pSelection ??????????????????
*@warning ???????????????????????????δ???????????????
*/
dvp2api dvpStatus dvpGetSelectionDetail(dvpHandle handle, dvpStr name, dvpUint32 index, dvpSelection* pSelection);


dvp2api dvpStatus dvpWriteGenICamReg(dvpHandle handle, dvpUint32 addr, dvpUint32 data);
dvp2api dvpStatus dvpReadGenICamReg(dvpHandle handle, dvpUint32 addr, dvpUint32* pData);

dvp2api dvpStatus dvpWriteGenICamRegFloat(dvpHandle handle, dvpUint32 addr, float data);
dvp2api dvpStatus dvpReadGenICamRegFloat(dvpHandle handle, dvpUint32 addr,  float* data);

dvp2api dvpStatus dvpWriteGenICamMem(dvpHandle handle, dvpUint32 addr, const void* pData, dvpUint32 uSize);
dvp2api dvpStatus dvpReadGenICamMem(dvpHandle handle, dvpUint32 addr, void* pData, dvpUint32 uSize);

dvp2api dvpStatus dvpGetConfigString(dvpHandle handle, dvpStr key, dvpStr* value);

dvp2api dvpStatus dvpSetConfigString(dvpHandle handle, dvpStr key, dvpStr value);



/** @} end of DVP2_API_BRIDGE */

/** @defgroup DVP_EXPOSURE ?????
*@{
*/
/** @} end of DVP_EXPOSURE */

/** @defgroup DVP_COLOR ??????
*@{
*/
/** @} end of DVP_COLOR */

/** @defgroup DVP_ENHANCE ???Ч??
*@{
*/
/** @} end of DVP_ENHANCE */

/** @defgroup DVP_SIZE ?????
*@{
*/
/** @} end of DVP_SIZE */

/** @defgroup DVP_FORMAT ?????
*@{
*/
/** @} end of DVP_FORMAT */

/** @defgroup DVP_TRIGGER ????????
*@{
*/
/** @} end of DVP_TRIGGER */

/** @defgroup DVP_LINE ???????
*@{
*/
/** @} end of DVP_LINE */

/** @defgroup DVP_CORRECTION ???У??
*@{
*/
/** @} end of DVP_CORRECTION */

/** @defgroup DVP_PERFORMANCE ???????
*@{
*/
/** @} end of DVP_PERFORMANCE */

/** @defgroup DVP_INFORMATION ???????
*@{
*/
/** @} end of DVP_INFORMATION */

/** @defgroup DVP_ADVANCED ???????
*@{
*/
/** @} end of DVP_ADVANCED */

/** @defgroup DVP_LINESCAN ??????
*@{
*/
/** @} end of DVP_LINESCAN */

#endif /* __DVPCAMERA_H__ */

